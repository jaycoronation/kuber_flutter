import 'dart:async';import 'dart:convert';import 'dart:io';import 'package:flutter/cupertino.dart';import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_google_places/flutter_google_places.dart';import 'package:flutter_paypal/flutter_paypal.dart';import 'package:geocoding/geocoding.dart';import 'package:geolocator/geolocator.dart';import 'package:google_geocoding/google_geocoding.dart';import 'package:intl/intl.dart';import 'package:kuber/constant/api_end_point.dart';import 'package:kuber/constant/colors.dart';import 'package:kuber/model/CommonResponseModel.dart';import 'package:kuber/model/PrayerListResponseModel.dart';import 'package:kuber/model/PricesResponseModel.dart';import 'package:kuber/screen/MyAccountScreen.dart';import 'package:kuber/screen/PujaListScreen.dart';import 'package:kuber/screen/TempleListScreen.dart';import 'package:kuber/utils/session_manager.dart';import 'package:kuber/widget/loading.dart';import 'package:like_button/like_button.dart';import 'package:permission_handler/permission_handler.dart';import 'package:pretty_http_logger/pretty_http_logger.dart';import 'package:share_plus/share_plus.dart';import 'package:url_launcher/url_launcher.dart';import 'package:google_maps_webservice/places.dart';import 'package:google_api_headers/google_api_headers.dart';import '../model/CountryListResponseModel.dart';import '../model/DonationListResponseModel.dart';import '../model/FeedListResponseModel.dart';import '../model/PujaListResponseModel.dart';import '../model/TempleListResponseModel.dart';import '../utils/app_utils.dart';import '../utils/responsive.dart';import 'AstrologyBottomSheet.dart';import 'BookPriestBottomSheet.dart';import 'BookPriestBottomSheet.dart';import 'DonationScreen.dart';import 'FeedDetailsScreen.dart';import 'FeedScreen.dart';import 'MatchMakingBottomSheet.dart';import 'NewProfileScreen.dart';import 'PrayerBottomSheet.dart';import 'RashiBottomSheet.dart';class DashboardScreen extends StatefulWidget {  const DashboardScreen({Key? key}) : super(key: key);  @override  State<DashboardScreen> createState() => _DashboardScreen();}class _DashboardScreen extends State<DashboardScreen> {  List<Prayers> _prayerList = List<Prayers>.empty(growable: true);  List<Results> _listTemples = [];  TextEditingController firstNameController = TextEditingController();  TextEditingController lastNameController = TextEditingController();  TextEditingController mobileNumberController = TextEditingController();  TextEditingController emailController = TextEditingController();  TextEditingController selectPujaController = TextEditingController();  TextEditingController leaveDetailController = TextEditingController();  TextEditingController addressController = TextEditingController();  TextEditingController dobController = TextEditingController();  TextEditingController prayerFNameController = TextEditingController();  TextEditingController prayerLNameController = TextEditingController();  TextEditingController prayerDOBController = TextEditingController();  TextEditingController prayerEmailController = TextEditingController();  TextEditingController PrayerForController = TextEditingController();  TextEditingController prayerNotesController = TextEditingController();  TextEditingController rashiMothersNameController = TextEditingController();  TextEditingController rashiFathersNameController = TextEditingController();  TextEditingController rashiEmailController = TextEditingController();  TextEditingController rashiTOBController = TextEditingController();  TextEditingController rashiPOBController = TextEditingController();  TextEditingController rashiNotesController = TextEditingController();  TextEditingController rashiDOBController = TextEditingController();  TextEditingController matchFnameController = TextEditingController();  TextEditingController matchLnameController = TextEditingController();  TextEditingController matchEmailcontroller = TextEditingController();  TextEditingController matchNumberController = TextEditingController();  TextEditingController matchGirlFnameController = TextEditingController();  TextEditingController matchGirlLNameController = TextEditingController();  TextEditingController matchGirlBirthDateController = TextEditingController();  TextEditingController matchGirlBirthTimeController = TextEditingController();  TextEditingController matchGirlBirthPlaceController = TextEditingController();  TextEditingController matchBoyFNameController = TextEditingController();  TextEditingController matchBoyLNameController = TextEditingController();  TextEditingController matchBoyBirthDateController = TextEditingController();  TextEditingController matchBoyBirthTimeController = TextEditingController();  TextEditingController matchBoyBirthPlaceController = TextEditingController();  TextEditingController matchNoteController = TextEditingController();  TextEditingController astroFnameController = TextEditingController();  TextEditingController astroLnameController = TextEditingController();  TextEditingController astroEmailController = TextEditingController();  TextEditingController astroMobileNumberController = TextEditingController();  TextEditingController astroBirthTimeController = TextEditingController();  TextEditingController astroBirthPlaceController = TextEditingController();  TextEditingController astroNotesController = TextEditingController();  TextEditingController astroGirlBirthDateController = TextEditingController();  TextEditingController pickDateController = TextEditingController();  TextEditingController pickTimeController = TextEditingController();  String prayerID = "";  bool priest = false;  bool _isLoading = false;  String selectedDate = "";  String selectdateOfBirth = "Date Of Birth";  String selectedTime = "Pick Time";  String pujaDescription = "";  String pujaId = "";  String _currentAddress = "";  String dateTimeForShow = "";  String dateTimeForPass = "";  bool isWantGoods = false;  bool isPickupPriest = false;  bool haspermission = false;  SessionManager sessionManager = SessionManager();  double long = 0.0, lat = 0.0;  late GoogleGeocoding googleGeocoding;  late LocationPermission permission;  late Position position;  bool isBoy = true;  bool isGirl = false;  String matchMakingPrice = "";  String astroPrice = "";  String rashiPrice = "";  List<Feeds> listFeed = [];  @override  initState() {    firstNameController.text= sessionManager.getName().toString();    lastNameController.text= sessionManager.getLastName().toString();    mobileNumberController.text= sessionManager.getPhone().toString();    emailController.text= sessionManager.getEmail().toString();    getFeed();    checkPermission();    _callListPrayer();    getTempleList();    getCountryData();    getPrices();    super.initState();  }  void checkPermission() async {    permission = await Geolocator.checkPermission();    if (permission == LocationPermission.denied)    {      permission = await Geolocator.requestPermission();      if (permission == LocationPermission.denied)      {        showSnackBar('Location permissions are denied', context);      }      else if(permission == LocationPermission.deniedForever)      {        showSnackBar("'Location permissions are permanently denied", context);      }      else      {        haspermission = true;      }    }    else    {      haspermission = true;    }    if (!haspermission)    {      openAppSettings();    }    else    {      getLocation();    }  }  getLocation() async {    position = await Geolocator.getCurrentPosition(desiredAccuracy: LocationAccuracy.high);    setState(() {      lat = position.latitude;      long = position.longitude;    });    _getAddressFromLatLng();  }  @override  Widget build(BuildContext context) {    return ResponsiveWidget.isSmallScreen(context)      ? WillPopScope(      child: Scaffold(        resizeToAvoidBottomInset: true,        backgroundColor: kuber,        appBar: AppBar(          systemOverlayStyle: SystemUiOverlayStyle(            statusBarColor: kuber,            statusBarIconBrightness: Brightness.dark, // For Android (dark icons)            statusBarBrightness: Brightness.light,          ) ,          toolbarHeight: 60,          automaticallyImplyLeading: false,          backgroundColor: kuber,          elevation: 0,          titleSpacing: 42,          centerTitle: true,          title: const Center(            child: Text("Dashboard",                style: TextStyle(fontWeight: FontWeight.w600, color: darkbrown, fontSize: 20),                textAlign: TextAlign.center            ),          ),          actions: [            GestureDetector(              behavior: HitTestBehavior.opaque,              onTap: () async {                var value = await Navigator.push(context, MaterialPageRoute(builder: (context) => const MyAccountScreenNew()));                setState(() {                });              },              child: sessionManager.getImagePic()?.isNotEmpty ?? false                  ? Padding(                    padding: const EdgeInsets.all(8.0),                    child: Container(                      width: 60,                      height: 60,                      decoration: BoxDecoration(                        shape: BoxShape.circle,                        border: Border.all(                            color: light_yellow,                            width: 1                        ),                        image: DecorationImage(                            image: NetworkImage(sessionManager.getImagePic().toString()) ,                            fit: BoxFit.cover                        ),                      ),                    ),                  )                  : Padding(                      padding: const EdgeInsets.all(8.0),                      child: Image.asset("assets/images/ic_user_placeholder.png",height: 60,width: 60,),                  )            )          ],        ),        body: _isLoading            ? const LoadingWidget()            : SingleChildScrollView(          child: Column(            children: [              Container(height: 0,),              SizedBox(                  height: 320,                  child: Stack(                    children: [                      GestureDetector(                        child: Container(                          margin: const EdgeInsets.only(top: 12,),                          child: Column(                              children: [                                ClipRRect(                                  borderRadius: BorderRadius.circular(18),                                  child: Container(                                    margin: const EdgeInsets.only(top: 12,bottom: 12, left: 14, right: 14),                                    child: Image.asset(                                      "assets/images/vector.png",                                      height: 260,                                      width: MediaQuery.of(context).size.width,                                      fit: BoxFit.cover,                                    ),                                  ),                                ),                                // Container(                                //     margin: const EdgeInsets.only(top: 6),                                //     child: Text(                                //       'Book a Priest',                                //       textAlign: TextAlign.center,                                //       style: getTextStyle(                                //           fontWeight: FontWeight.bold,                                //           color: title,                                //           fontSize: 14),                                //     )                                // ),                              ]                          ),                        ),                        onTap: () {                          _showBookingDialog();                        },                      ),                      Positioned(                          bottom: 12,                          // right: 12,                          width: MediaQuery.of(context).size.width,                          child: Container(                            alignment: Alignment.center,                            margin: const EdgeInsets.only(left: 28, right: 28),                            decoration: const BoxDecoration(                                borderRadius: BorderRadius.all(Radius.circular(12),) ,                                gradient: LinearGradient(                                  colors: [gradient_start, gradient_end],                                )                            ),                            child: ElevatedButton(                              onPressed: () {                                bookPriest();                              },                              style: ElevatedButton.styleFrom(                                  backgroundColor: Colors.transparent,                                  shadowColor: Colors.transparent                              ),                              child: Row(                                mainAxisAlignment: MainAxisAlignment.center,                                crossAxisAlignment: CrossAxisAlignment.center,                                children: [                                  Image.asset('assets/images/Done-icon.png', width: 32,),                                  Container(width: 14,),                                  const Text('Book A Priest', style: TextStyle(color: darkbrown, fontSize: 14),),                                ],                              ),                            ),                          )                      ),                    ],                  )),              Container(height: 12,),              Padding(                padding: const EdgeInsets.only(left: 14.0, right: 14),                child: Row(                  children: [                    Flexible(                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        crossAxisAlignment: CrossAxisAlignment.center,                        children: [                          GestureDetector(                              onTap: (){                                templePush();                              },                              child: Column(                                children: [                                  Image.asset('assets/images/templee.png',width: 110, ),                                  Container(height: 8,),                                  const Text('TEMPLE', style: TextStyle(color: darkbrown, fontSize: 14, fontWeight: FontWeight.w600 ),),                                ],                              )                          ),                        ],                      ),                    ),                    Container(width: 12,),                    Flexible(                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        crossAxisAlignment: CrossAxisAlignment.center,                        children: [                          GestureDetector(                            onTap: (){                              prayerBottomSheet();                            },                            child: Column(                              children: [                                Image.asset('assets/images/prayerr.png',width: 110, ),                                Container(height: 8,),                                const Text('PRAYER', style: TextStyle(color: darkbrown, fontSize: 14, fontWeight: FontWeight.w600 ),),                              ],                            ),                          ),                        ],                      ),                    ),                    Container(width: 12,),                    Flexible(                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        crossAxisAlignment: CrossAxisAlignment.center,                        children: [                          GestureDetector(                              onTap: (){                                rashiBottomSheet();                              },                              child: Column(                                children: [                                  Image.asset('assets/images/rashii.png',width: 110, ),                                  Container(height: 8,),                                  const Text('RASHI', style: TextStyle(color: darkbrown, fontSize: 14, fontWeight: FontWeight.w600 ),),                                ],                              )),                        ],                      ),                    ),                  ],                ),              ),              Container(height: 18,),              Padding(                padding: const EdgeInsets.only(left: 14.0, right: 14),                child: Row(                  children: [                    Flexible(                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        crossAxisAlignment: CrossAxisAlignment.center,                        children: [                          GestureDetector(                            onTap: (){                              matchaMakingBottomSheet();                            },                            child: Column(                              children: [                                Image.asset('assets/images/matchingg.png',width: 110, ),                                Container(height: 8,),                                const Text('MATCH MAKING', style: TextStyle(color: darkbrown, fontSize: 14, fontWeight: FontWeight.w600 ),),                              ],                            ),                          ),                        ],                      ),                    ),                    Container(width: 12,),                    Flexible(                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        crossAxisAlignment: CrossAxisAlignment.center,                        children: [                          GestureDetector(                            onTap: (){                              astrologyBottomSheet();                            },                            child: Column(                              children: [                                Image.asset('assets/images/astroo.png',width: 110, ),                                Container(height: 8,),                                const Text('ASTROLOGY', style: TextStyle(color: darkbrown, fontSize: 14, fontWeight: FontWeight.w600 ),),                              ],                            ),                          ),                        ],                      ),                    ),                    Container(width: 12,),                    Flexible(                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        crossAxisAlignment: CrossAxisAlignment.center,                        children: [                          GestureDetector(                            onTap: (){                              donationBottomSheet();                            },                            child: Column(                              children: [                                Image.asset('assets/images/ic_donate.png',width: 110, ),                                Container(height: 8,),                                const Text('DONATION', style: TextStyle(color: darkbrown, fontSize: 14, fontWeight: FontWeight.w600 ),),                              ],                            ),                          ),                        ],                      ),                    ),                  ],                ),              ),              Container(height: 42,),              Padding(                padding: const EdgeInsets.only(left: 22.0, right: 18),                child: Container(                  margin: EdgeInsets.only(bottom: 12),                  alignment: Alignment.centerLeft,                  child: Row(                    mainAxisAlignment: MainAxisAlignment.spaceBetween,                    children: [                      Text(                          "Feeds",                          style: getTitleFontStyle()                      ),                      GestureDetector(                          onTap: (){                            Navigator.push(context, MaterialPageRoute(builder: (context) => const FeedScreen()));                          },                          child: const Text(                              "View All",                              style: TextStyle(fontSize: 16, color: darkbrown)                          )),                    ],                  ),                ),              ),              Padding(                padding: const EdgeInsets.only(left: 18.0, right: 18),                child: ListView.builder(                  shrinkWrap: true,                  physics: const BouncingScrollPhysics(),                  scrollDirection: Axis.vertical,                  itemCount: listFeed.length,                  itemBuilder: (BuildContext context, int index) {                    return GestureDetector(                      behavior: HitTestBehavior.opaque,                      onTap: () async {                        var dataGetSet = listFeed[index];                        var value = await  Navigator.push(context, MaterialPageRoute(builder: (context) => FeedDetailsScreen(dataGetSet)));                        if(value != null)                          {                            setState((){                              dataGetSet = value;                            });                          }                      },                      child: Container(                        margin: const EdgeInsets.only(bottom: 16),                        decoration: BoxDecoration(                            borderRadius: BorderRadius.circular(8),                            color: white                        ),                        child: Column(                          mainAxisAlignment: MainAxisAlignment.start,                          crossAxisAlignment: CrossAxisAlignment.start,                          children: [                            ClipRRect(                              borderRadius: BorderRadius.circular(8),                              child: Image.network(                                listFeed[index].mediaPath.toString(),                                width: MediaQuery.of(context).size.width,                                fit: BoxFit.cover,                              ),                            ),                            Container(height: 8,),                            Container(                              padding: const EdgeInsets.all(6),                              child: Row(                                children: [                                  LikeButton(                                    mainAxisAlignment: MainAxisAlignment.start,                                    crossAxisAlignment: CrossAxisAlignment.start,                                    size: 22,                                    isLiked: listFeed[index].isLiked == true,                                    circleColor: const CircleColor(start: orange, end: blue),                                    bubblesColor: const BubblesColor(                                      dotPrimaryColor: orange,                                      dotSecondaryColor: blue,                                    ),                                    likeBuilder: (bool isLiked) {                                      return Image.asset(                                        listFeed[index].isLiked ? "assets/images/like_filled.png" : "assets/images/like.png",                                      );                                    },                                    onTap: (isLike) async {                                      setState(() {                                        if (listFeed[index].isLiked == true) {                                          listFeed[index].isLiked = false;                                        } else {                                          listFeed[index].isLiked = true;                                        }                                      });                                      _likeFeeds(listFeed[index]);                                      return true;                                    },                                  ),                                  Container(width: 12,),                                  GestureDetector(                                      behavior: HitTestBehavior.opaque,                                      onTap: () async {                                        Share.share(listFeed[index].shareUrl.toString());                                        // if (await canLaunchUrl(Uri.parse(listFeed[index].shareUrl.toString())))                                        //   {                                        //     await launchUrl(Uri.parse(listFeed[index].shareUrl.toString()),mode: LaunchMode.externalApplication);                                        //   }                                      },                                      child: Image.asset("assets/images/share.png",width: 20,)                                  ),                                ],                              ),                            ),                            Container(height: 4,),                            Container(                                margin: const EdgeInsets.only(left: 12,right: 12),                                child: Text(listFeed[index].title.toString(),style: const TextStyle(fontWeight: FontWeight.w400,color: black,fontSize: 14))                            ),                            Container(height: 12,),                            Container(                                margin: const EdgeInsets.only(left: 12,right: 12),                                child: Text(getDateFromTimestamp(listFeed[index].timestamp.toString()),style: const TextStyle(fontWeight: FontWeight.w400,color: darkbrown,fontSize: 12))                            ),                            Container(height: 16,),                            /*                                Container(                                  padding: const EdgeInsets.all(6),                                  decoration: const BoxDecoration(                                      color: lighttxtGrey,                                      shape: BoxShape.circle                                  ),                                  child: LikeButton(                                    mainAxisAlignment: MainAxisAlignment.center,                                    crossAxisAlignment: CrossAxisAlignment.center,                                    size: 22,                                    isLiked: isLiked == 1,                                    circleColor: const CircleColor(start: orange, end: orangeNew),                                    bubblesColor: const BubblesColor(                                      dotPrimaryColor: orange,                                      dotSecondaryColor: orangeNew,                                    ),                                    likeBuilder: (bool isLiked) {                                      return Image.asset(                                        isLiked ? "assets/images/like_filled.png" : "assets/images/like.png",                                        color: isLiked ? orangeNew : black,                                      );                                    },                                    onTap: (isLike) async {                                      setState(() {                                        if (isLiked == 1) {                                          isLiked = 0;                                          postDetailsData.likesCount = int.parse(postDetailsData.likesCount.toString()) - 1;                                        } else {                                          isLiked = 1;                                          postDetailsData.likesCount = int.parse(postDetailsData.likesCount.toString()) + 1;                                        }                                      });                                      _likePost();                                      return true;                                    },                                  ),                                ),*/                          ],                        ),                      ),                    );                  },                ),              ),            ],          ),        ),        floatingActionButton: GestureDetector(          child: Container(            margin: const EdgeInsets.only(right: 20, bottom: 20),            alignment: Alignment.bottomRight,            width: 50,            height: 50,            child: Image.asset("assets/images/ic_whatsapp.png"),          ),          onTap: () async {            _launchWhatsapp();          },        ),      ),      onWillPop: () {        SystemNavigator.pop();        return Future.value(true);      },    )        : WillPopScope(          child: Scaffold(            resizeToAvoidBottomInset: true,            backgroundColor: kuber,            appBar: AppBar(              systemOverlayStyle: SystemUiOverlayStyle(                statusBarColor: kuber,                statusBarIconBrightness: Brightness.dark, // For Android (dark icons)                statusBarBrightness: Brightness.light,              ) ,              toolbarHeight: 60,              automaticallyImplyLeading: false,              backgroundColor: kuber,              elevation: 0,              titleSpacing: 42,              centerTitle: true,              title: const Center(                child: Text("Dashboard",                    style: TextStyle(fontWeight: FontWeight.w600, color: darkbrown, fontSize: 20),                    textAlign: TextAlign.center),              ),              /*actions: [                GestureDetector(                    behavior: HitTestBehavior.opaque,                    onTap: () async {                      var value = await Navigator.push(context, MaterialPageRoute(builder: (context) => const MyAccountScreenNew()));                      setState(() {                      });                    },                    child: sessionManager.getImagePic()?.isNotEmpty ?? false                        ? Padding(                      padding: const EdgeInsets.all(8.0),                      child: Container(                        width: 60,                        height: 60,                        decoration: BoxDecoration(                          shape: BoxShape.circle,                          border: Border.all(                              color: light_yellow,                              width: 1                          ),                          image: DecorationImage(                              image: NetworkImage(sessionManager.getImagePic().toString()) ,                              fit: BoxFit.cover                          ),                        ),                      ),                    )                        : Padding(                      padding: const EdgeInsets.all(8.0),                      child: Image.asset("assets/images/ic_user_placeholder.png",height: 60,width: 60,),                    )                )              ],*/            ),            body: _isLoading                ? const LoadingWidget()                : SingleChildScrollView(                  child: Column(                    children: [                      Container(height: 0,),                      SizedBox(                          height: 330,                          child: Stack(                            alignment: Alignment.bottomCenter,                            children: [                              GestureDetector(                                child: Container(                                  margin: const EdgeInsets.only(top: 12,),                                  child: Column(                                      children: [                                        ClipRRect(                                          borderRadius: BorderRadius.circular(18),                                          child: Container(                                            margin: const EdgeInsets.only(top: 12,bottom: 12, left: 14, right: 14),                                            child: Image.asset(                                              "assets/images/vector.png",                                              height: 286,                                              width:450,                                              fit: BoxFit.fill,                                            ),                                          ),                                        ),                                        // Container(                                        //     margin: const EdgeInsets.only(top: 6),                                        //     child: Text(                                        //       'Book a Priest',                                        //       textAlign: TextAlign.center,                                        //       style: getTextStyle(                                        //           fontWeight: FontWeight.bold,                                        //           color: title,                                        //           fontSize: 14),                                        //     )                                        // ),                                      ]                                  ),                                ),                                onTap: () {                                  _showBookingDialog();                                },                              ),                              Positioned(                                  bottom: 0,                                  // right: 70,                                  width:450,                                  child: Container(                                    alignment: Alignment.center,                                    margin: const EdgeInsets.only(left: 28, right: 28),                                    decoration: const BoxDecoration(                                    borderRadius: BorderRadius.all(Radius.circular(12),) ,                                      gradient: LinearGradient(                                        colors: [gradient_start, gradient_end],                                      )                                    ),                                    child: Padding(                                  padding: const EdgeInsets.only(top: 8.0, bottom: 8),                                  child: TextButton(                                    onPressed: () {                                      bookPriest();                                    },                                    style: TextButton.styleFrom(                                      // padding: const EdgeInsets.fromLTRB(0 , 22,0 ,22),                                      textStyle: const TextStyle(fontSize: 22, color: darkbrown, fontWeight: FontWeight.w600),                                    ),                                    child: Row(                                      mainAxisAlignment: MainAxisAlignment.center,                                      crossAxisAlignment: CrossAxisAlignment.center,                                      children: [                                        Image.asset('assets/images/Done-icon.png', width: 30,),                                        Container(width: 16,),                                        const Text('Book A Priest', style: TextStyle(color: darkbrown, fontSize: 16),),                                      ],                                    ),                                  ),                                    ),                                  )                              ),                            ],                          )                      ),                      Container(height: 36,),                      Padding(                        padding: const EdgeInsets.only(left: 14.0, right: 14),                        child: Row(                          children: [                            Flexible(                              child: Row(                                mainAxisAlignment: MainAxisAlignment.center,                                crossAxisAlignment: CrossAxisAlignment.center,                                children: [                                  GestureDetector(                                      onTap: (){                                        templePush();                                      },                                      child: Column(                                        children: [                                          Image.asset('assets/images/templee.png',width: 140, ),                                          Container(height: 8,),                                          const Text('TEMPLE', style: TextStyle(color: darkbrown, fontSize: 16, fontWeight: FontWeight.w600 ),),                                        ],                                      )),                                ],                              ),                            ),                            Flexible(                              child: Row(                                mainAxisAlignment: MainAxisAlignment.center,                                crossAxisAlignment: CrossAxisAlignment.center,                                children: [                                  GestureDetector(                                    onTap: (){                                      prayerBottomSheet();                                    },                                    child: Column(                                      children: [                                        Image.asset('assets/images/prayerr.png',width: 140, ),                                        Container(height: 8,),                                        const Text('PRAYER', style: TextStyle(color: darkbrown, fontSize: 16, fontWeight: FontWeight.w600 ),),                                      ],                                    ),                                  ),                                ],                              ),                            ),                            Flexible(                              child: Row(                                mainAxisAlignment: MainAxisAlignment.center,                                crossAxisAlignment: CrossAxisAlignment.center,                                children: [                                  GestureDetector(                                      onTap: (){                                        rashiBottomSheet();                                      },                                      child: Column(                                        children: [                                          Image.asset('assets/images/rashii.png',width: 140, ),                                          Container(height: 8,),                                          const Text('RASHI', style: TextStyle(color: darkbrown, fontSize: 16, fontWeight: FontWeight.w600 ),),                                        ],                                      )                                  ),                                ],                              ),                            ),                          ],                        ),                      ),                      Container(height: 26,),                      Padding(                        padding: const EdgeInsets.only(left: 14.0, right: 14),                        child: Row(                          children: [                            Flexible(                              child: Row(                                mainAxisAlignment: MainAxisAlignment.center,                                crossAxisAlignment: CrossAxisAlignment.center,                                children: [                                  GestureDetector(                                    onTap: (){                                      matchaMakingBottomSheet();                                    },                                    child: Column(                                      children: [                                        Image.asset('assets/images/matchingg.png',width: 140, ),                                        Container(height: 8,),                                        const Text('MATCH MAKING', style: TextStyle(color: darkbrown, fontSize: 16, fontWeight: FontWeight.w600 ),),                                      ],                                    ),                                  ),                                ],                              ),                            ),                            Flexible(                              child: Row(                                mainAxisAlignment: MainAxisAlignment.center,                                crossAxisAlignment: CrossAxisAlignment.center,                                children: [                                  GestureDetector(                                    onTap: (){                                      astrologyBottomSheet();                                    },                                    child: Column(                                      children: [                                        Image.asset('assets/images/astroo.png',width: 140, ),                                        Container(height: 8,),                                        const Text('ASTROLOGY', style: TextStyle(color: darkbrown, fontSize: 16, fontWeight: FontWeight.w600 ),),                                      ],                                    ),                                  ),                                ],                              ),                            ),                            Flexible(                              child: Row(                                mainAxisAlignment: MainAxisAlignment.center,                                crossAxisAlignment: CrossAxisAlignment.center,                                children: [                                  GestureDetector(                                    onTap: (){                                      donationBottomSheet();                                    },                                    child: Column(                                      children: [                                        Image.asset('assets/images/ic_donate.png',width: 140, ),                                        Container(height: 8,),                                        const Text('DONATION', style: TextStyle(color: darkbrown, fontSize: 16, fontWeight: FontWeight.w600 ),),                                      ],                                    ),                                  ),                                ],                              ),                            ),                          ],                        ),                      ),                      Container(height: 36,),                    ],                  ),                ),                floatingActionButton: GestureDetector(                  child: Container(                    margin: const EdgeInsets.only(right: 20, bottom: 20),                    alignment: Alignment.bottomRight,                    width: 50,                    height: 50,                    child: Image.asset("assets/images/ic_whatsapp.png"),                  ),                  onTap: () async {                    _launchWhatsapp();                  },                ),              ),              onWillPop: () {                SystemNavigator.pop();                return Future.value(true);              },            );  }  _launchWhatsapp() async {    if (kIsWeb)      {        print("Is WEB");        var whatsapp = "+27833511333";        var whatsappAndroid =Uri.parse("https://api.whatsapp.com/send/?phone=27833511333");        if (await canLaunchUrl(whatsappAndroid))        {          await launchUrl(whatsappAndroid);        }        else        {          showSnackBar("WhatsApp is not installed on the device",context);        }      }    else if (Platform.isIOS)      {        var whatsapp = "+27833511333";        var whatsappAndroid =Uri.parse("https://api.whatsapp.com/send?phone=?phone=27833511333=${Uri.parse("Hi, I am interested in knowing more about the services offered by Kuber.")}");        var iosURL =Uri.parse("https://wa.me/${whatsapp}?text=${Uri.parse("Hi, I am interested in knowing more about the services offered by Kuber.")}");        if (await canLaunchUrl(iosURL))        {          await launchUrl(iosURL);        }        else        {          showSnackBar("WhatsApp is not installed on the device",context);        }      }    else      {        var whatsapp = "+27833511333";        var whatsappAndroid =Uri.parse("whatsapp://send?phone=$whatsapp&text=Hi, I am interested in knowing more about the services offered by Kuber.");        if (await canLaunchUrl(whatsappAndroid))        {          await launchUrl(whatsappAndroid);        }        else        {          showSnackBar("WhatsApp is not installed on the device",context);        }      }  }  String url() {    if (Platform.isAndroid) {      // add the [https]      return "https://wa.me/?27833511333/?text=${Uri.parse("Hi, I am interested in knowing more about the services offered by Kuber.")}"; // new line    } else {      // add the [https]      return "https://api.whatsapp.com/send?phone=?phone=27833511333=${Uri.parse("Hi, I am interested in knowing more about the services offered by Kuber.")}"; // new line    }  }  _likeFeeds(Feeds listFeed) async {    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(MAIN_URL + likeFeeds);    Map<String, String> jsonBody = {      'user_id' : sessionManager.getUserId().toString(),      'id' : listFeed.id.toString()    };    final response = await http.post(url, body: jsonBody);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = CommonResponseModel.fromJson(user);    if (statusCode == 200 && dataResponse.success == 1) {      setState(() {        _isLoading = false;      });    } else {      setState(() {        _isLoading = false;      });      showToast(dataResponse.message, context);    }  }  Future<void> bookPriest() async {    showModalBottomSheet<bool>(      isScrollControlled: true,      isDismissible: true,      context: context,      builder: (BuildContext context) {        return ConstrainedBox(          constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.88),          child: const BookPriestBottomSheet(),        );      },    ).then((value) {      if(value == true)        {          _showAlertDialog("assets/images/guru_vec.png", "Your request\nto book Priest is received,\nwill contact you shortly.");        }    },);  }  Future<void> matchaMakingBottomSheet() async {    showModalBottomSheet<bool>(      isScrollControlled: true,      isDismissible: true,      context: context,      builder: (BuildContext context) {        return ConstrainedBox(          constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.88),          child: const MatchaMakingBottomSheet(),        );      },    ).then((value) {      if(value == true)        {          _showAlertDialog("assets/images/ic_match_vec.png","Your request\nfor match making is received,\nwill contact you shortly.");        }    },);  }  Future<void> rashiBottomSheet() async {    showModalBottomSheet<bool>(      isScrollControlled: true,      isDismissible: true,      context: context,      builder: (BuildContext context) {        return ConstrainedBox(          constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.88),          child: const RashiBottomSheet(),        );      },    ).then((value) {      if(value == true)        {        _showAlertDialog("assets/images/ic_rashi_vec.png","Your request\nfor rashi is received,\nwill contact you shortly.");        }    },);  }  Future<void> astrologyBottomSheet() async {    showModalBottomSheet<bool>(      isScrollControlled: true,      isDismissible: true,      context: context,      builder: (BuildContext context) {        return ConstrainedBox(          constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.88),          child: const AstrologyBottomSheet(),        );      },    ).then((value ) {      if(value == true)        {        _showAlertDialog("assets/images/Astrology.jpg","Your request\nfor astrology is received,\nwill contact you shortly.");        }    },);  }  Future<void> prayerBottomSheet() async {    showModalBottomSheet<bool>(      isScrollControlled: true,      isDismissible: true,      context: context,      builder: (BuildContext context) {        return ConstrainedBox(          constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.88),          child: const PrayerBottomSheet(),        );      },    ).then((value ) {      if(value == true)        {          _showAlertDialog("assets/images/ic_prayer_vec.png", "Your prayer \nrequest is received, \nwill contact \nyou shortly.");        }    },);  }  Future<void> donationBottomSheet() async {    showModalBottomSheet<bool>(      isScrollControlled: true,      isDismissible: true,      context: context,      builder: (BuildContext context) {        return ConstrainedBox(          constraints: BoxConstraints(maxHeight: MediaQuery.of(context).size.height * 0.88),          child: const DonationScreen(),        );      },    ).then((value) {      print(value);      if (value == true)        {          _showAlertDialog("assets/images/ic_donation_vec.png"," Thank You for\n Your Donation");        }    },);  }  void templePush() async {    LocationPermission permission = await Geolocator.checkPermission();    if (permission == LocationPermission.denied)    {      permission = await Geolocator.requestPermission();      if (permission == LocationPermission.denied)      {        showSnackBar('Location permissions are denied', context);      }      else if(permission == LocationPermission.deniedForever)      {        showSnackBar("'Location permissions are permanently denied", context);      }      else      {        haspermission = true;      }    }    else    {      haspermission = true;    }    if (!haspermission)    {      openAppSettings();    }    else    {      Navigator.push(context, MaterialPageRoute(builder: (context) =>  TempleListScreen(_listTemples)));    }  }  getFeed() async {    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(MAIN_URL + getUserFeed);    Map<String, String> jsonBody = {      'user_id' : sessionManager.getUserId().toString(),      'page' : "0",      'limit' : "10",      'status'  : "1"    };    final response = await http.post(url, body: jsonBody);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = FeedListResponseModel.fromJson(user);    if (statusCode == 200 && dataResponse.success == 1) {      List<Feeds>? _tempList = [];      _tempList = dataResponse.records;      listFeed.addAll(_tempList!);    }else {      showSnackBar(dataResponse.message.toString(), context);    }    setState(() {    });  }  void _showBookingDialog() {    showModalBottomSheet(      context: context,      isScrollControlled: true,      backgroundColor: Colors.transparent,      builder: (context) {        return Padding(          padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),          child: StatefulBuilder(            builder: (context, setState) {              return Container(                height: MediaQuery.of(context).size.height * 0.88,                decoration: const BoxDecoration(                  color: bottomSheetBg,                  borderRadius: BorderRadius.only(                    topLeft: Radius.circular(22.0),                    topRight: Radius.circular(22.0),                  ),                ),                child: SingleChildScrollView(                  scrollDirection: Axis.vertical,                  child:Padding(                    padding: const EdgeInsets.only(left:14,right:14),                    child: Column(                      children: [                        Container(                            width: 50,                            margin: const EdgeInsets.only(top: 12),                            child: const Divider(                              height: 2,                              thickness: 2,                              color: bottomSheetline,                            )                        ),                        Container(                          margin: const EdgeInsets.only(top: 10),                          child: const Text(                            "Book a Priest",                            style: TextStyle(                                fontWeight: FontWeight.bold, color: darkbrown, fontSize: 22),                          ),                        ),                        Container(height: 18,),                        Column(                          children: [                            Container(                              padding: const EdgeInsets.only(left: 18),                                alignment: Alignment.centerLeft,                                child: const Text(                                  "Address",                                  style: TextStyle(                                      fontWeight: FontWeight.bold,                                      color: txtGrey,                                      fontSize: 16),                                )                            ),                            Container(height: 14,),                            TextField(                              onTap: (){                                placesDialog(addressController,setState);                              },                              controller: addressController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                hintText: 'Select Address',                              ),                            ),                          ],                        ),                        Container(height: 22,),                        Column(                          children: [                            Container(                                padding: const EdgeInsets.only(left: 18),                                alignment: Alignment.centerLeft,                                child: const Text(                                  "Puja Name",                                  style: TextStyle(                                      fontWeight: FontWeight.bold,                                      color: txtGrey,                                      fontSize: 16),                                )                            ),                            Container(height: 14,),                            TextField(                              onTap: () async {                                FocusScope.of(context).requestFocus(FocusNode());                                var value = await Navigator.push(context, MaterialPageRoute(builder: (context) => const PujaListScreen())) as PujaList;                                print(value);                                if (value.pujaId.toString().isNotEmpty)                                {                                  print(value.pujaName);                                  setState((){                                    selectPujaController.text = value.pujaName.toString();                                    pujaDescription = value.pujaDescription.toString();                                    pujaId = value.pujaId.toString();                                  });                                }                              },                              controller: selectPujaController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                hintText: 'Select Puja',                                suffixIcon: Padding(                                  padding: const EdgeInsets.all(16.0),                                  child: Image.asset("assets/images/ic_form_dropdown_arrow.png",height: 14,                                    width: 14,),                                ),                              ),                            ),                          ],                        ),                       /* Container(                          alignment: Alignment.centerLeft,                          margin:                          const EdgeInsets.only(top: 20, bottom: 10),                          child: const Text(                            "Yajman's Details",                            style: TextStyle(                                fontWeight: FontWeight.bold,                                color: text_new,                                fontSize: 14),                          ),                        ),                        Container(                          margin: const EdgeInsets.only(top: 14,),                          child: TextField(                            controller: firstNameController,                            keyboardType: TextInputType.text,                            cursorColor: text_dark,                            minLines: 1,                            maxLines: 1,                            style: const TextStyle(color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                            decoration: InputDecoration(                                fillColor: white_blue,                                filled: true,                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(16.0),                                    borderSide: const BorderSide(width: 0,style: BorderStyle.none)                                ),                                contentPadding: const EdgeInsets.symmetric(vertical: 6,horizontal: 8),                                hintText: 'First name',                                hintStyle: const TextStyle(                                    color: text_dark,                                    fontSize: 14,                                    fontWeight: FontWeight.w900)),                          ),                        ),                        Container(                          margin: const EdgeInsets.only(top: 10,),                          child: TextField(                            controller: lastNameController,                            keyboardType: TextInputType.text,                            cursorColor: text_dark,                            style: const TextStyle(                                color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                            decoration: InputDecoration(                                fillColor: white_blue,                                filled: true,                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(16.0),                                    borderSide: const BorderSide(width: 0,style: BorderStyle.none)                                ),                                contentPadding: const EdgeInsets.symmetric(vertical: 6,horizontal: 8),                                hintText: 'Last name',                                hintStyle: const TextStyle(                                    color: text_dark,                                    fontSize: 14,                                    fontWeight: FontWeight.w900)),                          ),                        ),                        Container(                          margin: const EdgeInsets.only(top: 10),                          child: TextField(                            controller: emailController,                            keyboardType: TextInputType.emailAddress,                            cursorColor: text_dark,                            style: const TextStyle(                                color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                            decoration:  InputDecoration(                                fillColor: white_blue,                                filled: true,                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(16.0),                                    borderSide: const BorderSide(width: 0,style: BorderStyle.none)                                ),                                contentPadding: const EdgeInsets.symmetric(vertical: 6,horizontal: 8),                                hintText: 'Email',                                hintStyle: const TextStyle(                                    color: text_dark,                                    fontSize: 14,                                    fontWeight: FontWeight.w900)),                          ),                        ),                        Container(                          alignment: Alignment.center,                          margin: const EdgeInsets.only(top: 10),                          padding: const EdgeInsets.only(left: 18, right: 18),                          decoration: const BoxDecoration(                            color: white_blue,                            borderRadius: BorderRadius.all(                              Radius.circular(18),                            ),                          ),                          child: Row(                            children: [                              GestureDetector(                                behavior: HitTestBehavior.opaque,                                child: Text(countryCode,                                    style: const TextStyle(                                        color: text_dark,                                        fontWeight: FontWeight.w600,                                        fontSize: 14)                                ),                                onTap: (){                                  print("is DOne");                                  countryDialog(setState);                                },                              ),                              Container(                                margin: const EdgeInsets.only(left: 10,right:10),                                height: 20,                                width: 1,                                color: text_light,                              ),                              Flexible(                                child: TextField(                                    controller: mobileNumberController,                                    keyboardType: TextInputType.number,                                    cursorColor: text_dark,                                    maxLength: 10,                                    style: const TextStyle(                                      color: text_dark,                                      fontSize: 14,                                      fontWeight: FontWeight.w600,                                    ),                                    decoration: const InputDecoration(                                        counterText: "",                                        border: InputBorder.none,                                        hintText: "Mobile number",                                        hintStyle: TextStyle(                                          color: text_dark,                                          fontSize: 14,                                          fontWeight: FontWeight.w600,                                        ))),                              )                            ],                          ),                        ),                        Container(                          alignment: Alignment.centerLeft,                          margin:                          const EdgeInsets.only(top: 20, bottom: 10),                          child: const Text(                            "Puja Name",                            style: TextStyle(                                fontWeight: FontWeight.bold,                                color: text_new,                                fontSize: 14),                          ),                        ),                        Container(                          margin: const EdgeInsets.only(top: 10),                          child: TextField(                            onTap: () async {                              FocusScope.of(context).requestFocus(FocusNode());                              var value = await Navigator.push(context, MaterialPageRoute(builder: (context) => const PujaListScreen())) as PujaList;                              print(value);                              if (value.pujaId.toString().isNotEmpty)                              {                                print(value.pujaName);                                setState((){                                  selectPujaController.text = value.pujaName.toString();                                  pujaDescription = value.pujaDescription.toString();                                  pujaId = value.pujaId.toString();                                });                              }                            },                            controller: selectPujaController,                            keyboardType: TextInputType.text,                            cursorColor: title,                            style: const TextStyle(                                color: title, fontSize: 14, fontWeight: FontWeight.w600),                            decoration: InputDecoration(                                fillColor: white_blue,                                filled: true,                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(16.0),                                    borderSide: const BorderSide(width: 0,style: BorderStyle.none)                                ),                                contentPadding: const EdgeInsets.symmetric(vertical: 6,horizontal: 8),                                hintText: 'Select Puja',                                suffixIcon: Padding(                                  padding: const EdgeInsets.all(16.0),                                  child: Image.asset("assets/images/ic_right.png",height: 14,                                    width: 14,),                                ),                                hintStyle: const TextStyle(                                    color: text_dark,                                    fontSize: 14,                                    fontWeight: FontWeight.w900)),                          ),                        ), */                        Container(                          alignment: Alignment.centerLeft,                          margin: const EdgeInsets.only(top: 20, bottom: 10),                          child: const Text(                            "Available Date & Time",                            style: TextStyle(                                fontWeight: FontWeight.w500,                                color: text_new,                                fontSize: 16),                          ),                        ),                        Container(height: 14,),                        Padding(                          padding: const EdgeInsets.only(left: 22.0, right: 22),                          child: Row(                            crossAxisAlignment: CrossAxisAlignment.center,                            mainAxisAlignment: MainAxisAlignment.spaceBetween,                            children: [                              GestureDetector(                                onTap: () async {                                  _setPickDate(pickDateController,setState);                                },                                child: Row(                                  children: [                                    Image.asset(                                      "assets/images/ic_calender.png",                                      height: 22,                                      width: 22,                                    ),                                    Container(width: 12,),                                    const Text("Pick Date", style: TextStyle( fontSize: 16,                                        fontWeight: FontWeight.w500,                                        color: black),),                                    Container(width: 24,),                                    Image.asset(                                      "assets/images/ic_form_dropdown_arrow.png",                                      height: 18,                                      width: 18,                                    ),                                  ],                                ),                              ),                              Container(width: 35,),                              GestureDetector(                                onTap: () async {                                  _setTimePicker(pickTimeController,setState);                                },                                child: Row(                                  children: [                                    Image.asset(                                      "assets/images/ic_time.png",                                      height: 22,                                      width: 22,                                    ),                                    Container(width: 12,),                                    const Text("Pick Time", style: TextStyle( fontSize: 16,                                        fontWeight: FontWeight.w500,                                        color: black),),                                    Container(width: 24,),                                    Image.asset(                                      "assets/images/ic_form_dropdown_arrow.png",                                      height: 18,                                      width: 18,                                    ),                                  ],                                ),                              ),                             /* Expanded(                                child: TextField(                                  onTap: () async {                                    _setPickDate(pickDateController);                                  },                                  controller: pickDateController,                                  keyboardType: TextInputType.name,                                  readOnly: true,                                  decoration:  InputDecoration(                                    contentPadding:const EdgeInsets.only(top:12),                                    border: InputBorder.none,                                    fillColor: bottomSheetBg,                                    prefixIcon: Padding(                                      padding: const EdgeInsets.all(14.0),                                      child: Image.asset(                                        "assets/images/ic_calender.png",                                        height: 14,                                        width: 14,                                      ),                                    ),                                    suffixIcon: Padding(                                      padding: const EdgeInsets.all(14.0),                                      child: Image.asset(                                        "assets/images/ic_form_dropdown_arrow.png",                                        height: 2,                                        width: 2,                                      ),                                    ),                                    filled: true,                                    labelText: "Pick Date",                                    labelStyle: getTextStyle(                                      fontSize: 14,                                      fontWeight: FontWeight.w500,                                      color: black                                    ),                                  ),                                ),                              ),                              Container(width: 12,),                              Expanded(                                child: TextField(                                  onTap: () async {                                    _setTimePicker(pickTimeController);                                  },                                  controller: pickTimeController,                                  cursorColor: text_dark,                                  readOnly: true,                                  decoration:  InputDecoration(                                    fillColor: bottomSheetBg,                                    border: InputBorder.none,                                    prefixIcon: Padding(                                        padding: const EdgeInsets.all(14),                                        child:Image.asset("assets/images/ic_time.png",height: 14,                                          width: 14,)                                    ),                                    suffixIcon: Padding(                                      padding: const EdgeInsets.all(14.0),                                      child: Image.asset(                                        "assets/images/ic_form_dropdown_arrow.png",                                        height: 2,                                        width: 2,                                      ),                                    ),                                    filled: true,                                    hintText: "Pick Time",                                    hintStyle: getTextStyle(                                      fontSize: 14,                                      fontWeight: FontWeight.w500,                                      color: black                                    ),                                  ),                                ),                              ),*/                            ],                          ),                        ),                        Container(height: 18,),                        Row(                          children: [                            Flexible(                              child: Visibility(                                visible: selectedDate.isNotEmpty,                                child: Container(                                  padding: const EdgeInsets.all(12),                                  decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(28),                                    color: const Color(0xffe8e4c7),                                  ),                                  margin: const EdgeInsets.only(right: 8, left: 2),                                  child: Padding(                                    padding: const EdgeInsets.only(top:6.0, bottom: 6),                                    child: Row(                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                                      crossAxisAlignment: CrossAxisAlignment.center,                                      children: [                                          Text(selectedDate, style: const TextStyle(fontSize: 18, fontWeight: FontWeight.w400, color: darkbrown),),                                          const Image(image: AssetImage("assets/images/ic_right_aerrow.png"), width: 20, height: 20,)                                      ],                                    ),                                  ),                                ),                              ),                            ),                            Container(width: 18,),                            Flexible(                              child: Visibility(                                visible: selectedTime != "Pick Time",                                child: Container(                                  margin: const EdgeInsets.only(right: 8, left: 2),                                  padding: const EdgeInsets.all(12),                                  decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(28),                                    color: const Color(0xffe8e4c7),                                  ),                                  child: Padding(                                    padding: const EdgeInsets.only(top:6.0, bottom: 6, left: 8,right: 8),                                    child: Row(                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,                                      crossAxisAlignment: CrossAxisAlignment.center,                                      children: [                                        Text(selectedTime, style: const TextStyle(fontSize: 18, fontWeight: FontWeight.w400, color: darkbrown),),                                        const Image(image: AssetImage("assets/images/ic_right_aerrow.png"), width: 20, height: 20,)                                      ],                                    ),                                  ),                                ),                              ),                            ),                          ],                        ),                        /* Row(                          crossAxisAlignment: CrossAxisAlignment.center,                          mainAxisAlignment: MainAxisAlignment.center,                          children: [                            Visibility(                              visible: selectedDate.isNotEmpty,                              child: Expanded(                                child: TextField(                                  onTap: () async {                                    _setPickDate(pickDateController);                                  },                                  controller: pickDateController,                                  keyboardType: TextInputType.name,                                  readOnly: true,                                  decoration:  InputDecoration(                                    contentPadding:const EdgeInsets.only(top:12),                                    border: InputBorder.none,                                    fillColor: bottomSheetBg,                                    prefixIcon: Padding(                                      padding: const EdgeInsets.all(14.0),                                      child: Image.asset(                                        "assets/images/ic_calender.png",                                        height: 14,                                        width: 14,                                      ),                                    ),                                    suffixIcon: Padding(                                      padding: const EdgeInsets.all(14.0),                                      child: Image.asset(                                        "assets/images/ic_form_dropdown_arrow.png",                                        height: 2,                                        width: 2,                                      ),                                    ),                                    filled: true,                                    hintText: "Pick Date",                                    hintStyle: getTextStyle(                                        fontSize: 14,                                        fontWeight: FontWeight.w500,                                        color: black                                    ),                                  ),                                ),                              ),                            ),                            Container(width: 12,),                            Visibility(                              visible: selectedTime.isNotEmpty,                              child: Expanded(                                child: TextField(                                  onTap: () async {                                    _setTimePicker(pickTimeController);                                  },                                  controller: pickTimeController,                                  cursorColor: text_dark,                                  readOnly: true,                                  decoration:  InputDecoration(                                    fillColor: bottomSheetBg,                                    border: InputBorder.none,                                    prefixIcon: Padding(                                        padding: const EdgeInsets.all(14),                                        child:Image.asset("assets/images/ic_time.png",height: 14,                                          width: 14,)                                    ),                                    suffixIcon: Padding(                                      padding: const EdgeInsets.all(14.0),                                      child: Image.asset(                                        "assets/images/ic_form_dropdown_arrow.png",                                        height: 2,                                        width: 2,                                      ),                                    ),                                    filled: true,                                    hintText: "Pick Time",                                    hintStyle: getTextStyle(                                        fontSize: 14,                                        fontWeight: FontWeight.w500,                                        color: black                                    ),                                  ),                                ),                              ),                            ),                          ],                        ), */                        Container(                          margin: const EdgeInsets.only(left: 14,right: 14,top: 14,bottom: 14),                          child: Row(                            children: [                              const Flexible(                                flex: 1,                                child: Divider(                                  color: text_light,                                  height: 0.5,                                  thickness: 0.5,                                ),                              ),                              Container(                                margin: const EdgeInsets.only(left: 4, right: 4),                                child: const Text(                                  "OR",                                  style: TextStyle(                                      color: text_light,                                      fontSize: 16,                                      fontWeight: FontWeight.w300                                  ),                                ),                              ),                              const Flexible(                                flex: 1,                                child: Divider(                                  color: text_light,                                  height: 0.5,                                  thickness: 0.5,                                ),                              ),                            ],                          ),                        ),                        Container(                          alignment: Alignment.centerLeft,                          child: Text(                            "Ask for Auspicious date",                            style: getTextStyle(                                fontWeight: FontWeight.w400,                                color: text_new,                                fontSize: 16),                          ),                        ),                        Container(height: 14,),                        TextField(                          controller: leaveDetailController,                          keyboardType: TextInputType.text,                          cursorColor: Colors.grey,                          decoration: InputDecoration(                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(20),                                borderSide: const BorderSide(color: Colors.grey)                            ),                            focusedBorder: OutlineInputBorder(                              borderRadius: BorderRadius.circular(20),                              borderSide: const BorderSide(color: Colors.grey,),                            ),                            hintText: 'Leave Your Detail',                           ),                        ),                        // Container(                        //   margin: const EdgeInsets.only(top: 10, ),                        //   child:  TextField(                        //     controller: leaveDetailController,                        //     minLines: 4,                        //     maxLines: 4,                        //     keyboardType: TextInputType.text,                        //     cursorColor: title,                        //     style:   const TextStyle(                        //         color: title, fontSize: 14, fontWeight: FontWeight.w900),                        //     decoration: InputDecoration(                        //         fillColor: white_blue,                        //         filled: true,                        //         border: OutlineInputBorder(                        //             borderRadius: BorderRadius.circular(16.0),                        //             borderSide: const BorderSide(width: 0,style: BorderStyle.none)                        //         ),                        //         contentPadding: const EdgeInsets.symmetric(vertical: 6,horizontal: 8),                        //         hintText: 'Leave Your Detail',                        //         hintStyle: const TextStyle(                        //             color: text_dark,                        //             fontSize: 14,                        //             fontWeight: FontWeight.bold)),                        //   ),                        // ),                        Container(                          alignment: Alignment.centerRight,                          margin: const EdgeInsets.only(top: 10),                          child: const Text("Our office will contact you",                            style: TextStyle(fontWeight: FontWeight.w400,fontSize: 14,color: text_light),),                        ),                        /* Container(                          alignment: Alignment.topLeft,                          margin: const EdgeInsets.only(top: 16,bottom: 14),                          child: const Text("Address",style: TextStyle(fontSize: 14,color: brown,fontWeight: FontWeight.w600),),                        ),                        TextField(                          minLines: 2,                          maxLines: 2,                          controller: addressController,                          keyboardType: TextInputType.text,                          cursorColor: title,                          readOnly: true,                          onTap: (){                            placesDialog(addressController,setState);                          },                          style:  const TextStyle(                              color: title, fontSize: 14, fontWeight: FontWeight.w600),                          decoration: InputDecoration(                              fillColor: white_blue,                              filled: true,                              border: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(16.0),                                  borderSide: const BorderSide(width: 0,style: BorderStyle.none)                              ),                              contentPadding: const EdgeInsets.symmetric(vertical: 6,horizontal: 8),                              hintText: 'Add Address',                              hintStyle: const TextStyle(                                  color: text_dark,                                  fontSize: 14,                                  fontWeight: FontWeight.w900)),                        ), */                        Container(                          alignment: Alignment.topLeft,                          margin: const EdgeInsets.only(top: 14,bottom: 14),                          child: const Text("Will you pick up priest?",style: TextStyle(fontWeight: FontWeight.w400,color: text_new,fontSize: 16),),                        ),                        Row(                          children: [                            GestureDetector(                              onTap: () {                                setState(() {                                  isPickupPriest = true;                                });                              },                              child: Row(                                children: [                                  Container(                                      margin: const EdgeInsets.only(top: 8, right: 5),                                      child: isPickupPriest ?                                      const Image(image: AssetImage("assets/images/ic_radio_selected.png"), width: 20, height: 20, color: title) :                                      const Image(image: AssetImage("assets/images/ic_radio_unselected.png"),  width: 20, height: 20, color:title,)                                  ),                                  Container(                                    alignment: Alignment.centerLeft,                                    padding: const EdgeInsets.only(top: 8),                                    child: const Text("Yes", style: TextStyle(fontSize: 15,fontWeight: FontWeight.w500, color: black),),                                  ),                                ],                              ),                            ),                            GestureDetector(                              onTap: () {                                setState(() {                                  isPickupPriest = false;                                });                              },                              child: Row(                                children: [                                  Container(                                      margin: const EdgeInsets.only(top: 8, right: 5,left: 16),                                      child: !isPickupPriest ?                                      const Image(image: AssetImage("assets/images/ic_radio_selected.png"), width: 20, height: 20, color: title) :                                      const Image(image: AssetImage("assets/images/ic_radio_unselected.png"), width: 20, height: 20, color: title)                                  ),                                  Container(                                    alignment: Alignment.centerLeft,                                    padding: const EdgeInsets.only(top: 8,),                                    child: const Text("No", style: TextStyle(fontSize: 15,fontWeight: FontWeight.w500, color: black),),                                  ),                                ],                              ),                            )                          ],                        ),                         Container(                          alignment: Alignment.topLeft,                          margin: const EdgeInsets.only(top: 18,bottom: 14),                          child: const Text("Do you wants Puja Goods from Kuber?",style: TextStyle(fontWeight: FontWeight.w400,color: brown,fontSize: 16),),                        ),                        Row(                          children: [                            GestureDetector(                              onTap: () {                                setState(() {                                  isWantGoods = true;                                });                              },                              child: Row(                                children: [                                  Container(                                      margin: const EdgeInsets.only(top: 8, right: 5),                                      child:isWantGoods?                                      const Image(image: AssetImage("assets/images/ic_radio_selected.png"), width: 20, height: 20, color: title) :                                      const Image(image: AssetImage("assets/images/ic_radio_unselected.png"),  width: 20, height: 20, color:title,)                                  ),                                  Container(                                    alignment: Alignment.centerLeft,                                    padding: const EdgeInsets.only(top: 8),                                    child: const Text("Yes", style: TextStyle(fontSize: 15,fontWeight: FontWeight.w500, color: black),),                                  ),                                ],                              ),                            ),                            GestureDetector(                              onTap: () {                                setState(() {                                  isWantGoods = false;                                });                              },                              child: Row(                                children: [                                  Container(                                      margin: const EdgeInsets.only(top: 8, right: 5,left: 16),                                      child: !isWantGoods ?                                      const Image(image: AssetImage("assets/images/ic_radio_selected.png"), width: 20, height: 20, color: title) :                                      const Image(image: AssetImage("assets/images/ic_radio_unselected.png"), width: 20, height: 20, color: title)                                  ),                                  Container(                                    alignment: Alignment.centerLeft,                                    padding: const EdgeInsets.only(top: 8,),                                    child: const Text("No", style: TextStyle(fontSize: 15,fontWeight: FontWeight.w500, color: black),),                                  ),                                ],                              ),                            )                          ],                        ),                        Container(height: 8,),                        Visibility(                          visible: isWantGoods == true ,                          child: Container(                            alignment: Alignment.center,                            margin: const EdgeInsets.only(top: 10,bottom: 10),                            height: 60,                            child: Card(                              shape: RoundedRectangleBorder(                                borderRadius: BorderRadius.circular(14.0),                              ),                              color: const Color(0xffe8e4c7),                              // elevation: 10,                              child: Padding(                                padding: const EdgeInsets.all(8.0),                                child: SizedBox(                                  width: 240,                                  child: Row(                                    children: [                                      const Image(image: AssetImage("assets/images/ic_doc.png"),width: 18,),                                      Container(width: 8,),                                      const Text("Download Puja Good List",                                        style: TextStyle(                                            fontSize: 16,                                            color: text_new,                                            fontWeight: FontWeight.w400),textAlign: TextAlign.center,),                                      Container(width: 12,),                                      const Image(image: AssetImage("assets/images/ic_down_form.png"),width: 14,)                                    ],                                  ),                                ),                              ),                            ),                          ),                        ),                        Container(                            margin: const EdgeInsets.only(top: 16,right: 18,left: 14),                            child: const Divider(color: text_light,thickness: 1,height: 0.5,)),                        // Row(                        //   children: [                        //     InkWell(                        //       child: Padding(                        //     padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),                        //     child: Container(                        //                        //       alignment: Alignment.bottomRight,                        //       margin: const EdgeInsets.only(top: 10,bottom: 20),                        //       padding: const EdgeInsets.only(left: 14,right: 14),                        //       height: 60,                        //       child: Card(                        //         shape: RoundedRectangleBorder(                        //           borderRadius: BorderRadius.circular(20.0),                        //         ),                        //         color: light_yellow,                        //         elevation: 10,                        //         child: const Padding(                        //           padding: EdgeInsets.all(14.0),                        //           child: Text("Next",                        //             style: TextStyle(                        //                 fontSize: 14,                        //                 color: title,                        //                 fontWeight: FontWeight.bold),textAlign: TextAlign.center,),                        //         ),                        //       ),                        //     ),                        //       ),                        //       onTap: ()                        //       {                        //     var dateTime = "${pickDateController.text} $selectedTime";                        //                        //     if (dateTime == "Pick Date Pick Time")                        //     {                        //       dateTimeForShow = leaveDetailController.text;                        //     }                        //     else                        //     {                        //       var dateForShow = "${universalDateConverter("MMMM dd, yyyy", "dd-MM-yyyy", selectedDate)} $selectedTime";                        //       dateTimeForShow = dateTime;                        //       dateTimeForPass = dateForShow;                        //     }                        //     _bookPristValidation();                        //       },                        //     ),                        //                        //   ],                        // ),                        Container(height: 18,),                        Row(                          children: [                            Flexible(                              child: Container(                                margin: const EdgeInsets.only(right: 8, left: 2),                                child: TextButton(                                  onPressed: ()                                  {                                    Navigator.pop(context);                                  },                                  style: ButtonStyle(                                    shape: MaterialStateProperty.all<RoundedRectangleBorder>(                                      RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0), side: const BorderSide(color: light_yellow, width: 0.5)),                                    ),                                    backgroundColor: MaterialStateProperty.all<Color>(light_yellow),                                  ),                                  child: Padding(                                    padding: const EdgeInsets.all(4.0),                                    child: Row(                                      mainAxisAlignment: MainAxisAlignment.center,                                      crossAxisAlignment: CrossAxisAlignment.center,                                      children: const [                                        Text('Cancel', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w400, color: title),),                                      ],                                    ),                                  ),                                ),                              ),                            ),                            Flexible(                              child: Container(                                margin: const EdgeInsets.only(right: 8, left: 2),                                child: TextButton(                                  onPressed: ()                                  {                                    var dateTime = "${selectedDate} $selectedTime";                                    print(dateTime);                                    if (dateTime == " Pick Time")                                    {                                      if (leaveDetailController.value.text.isNotEmpty)                                        {                                          dateTimeForShow = leaveDetailController.value.text;                                        }                                      else                                        {                                          showToast("Please select date or leave details for us.", context);                                          return;                                        }                                    }                                    else                                    {                                      var dateForShow = "${universalDateConverter("MMM dd, yyyy", "dd-MM-yyyy", selectedDate)} $selectedTime";                                      dateTimeForShow = dateTime;                                      dateTimeForPass = dateForShow;                                    }                                    _bookPristValidation();                                  },                                  style: ButtonStyle(                                    shape: MaterialStateProperty.all<RoundedRectangleBorder>(                                      RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0), side: const BorderSide(color: light_yellow, width: 0.5)),                                    ),                                    backgroundColor: MaterialStateProperty.all<Color>(light_yellow),                                  ),                                  child: Padding(                                    padding: const EdgeInsets.all(4.0),                                    child: Row(                                      mainAxisAlignment: MainAxisAlignment.center,                                      crossAxisAlignment: CrossAxisAlignment.center,                                      children: const [                                        Text('Next', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w400, color: title),),                                      ],                                    ),                                  ),                                ),                              ),                            ),                          ],                        ),                        Container(height: 22,),                      ],                    ),                  ),                ),              );            },          ),        );      },    ).then((value) {      emailController.text = '';      addressController.text = '';      selectPujaController.text = '';      leaveDetailController.text = '';      selectedDate = '';      selectedTime = 'Pick Time';      pujaId = '';    },);  }  void showMatchDialog() {    matchFnameController.text = sessionManager.getName() ?? "";    matchLnameController.text = sessionManager.getLastName() ?? "";    matchEmailcontroller.text = sessionManager.getEmail() ?? "";    matchNumberController.text = sessionManager.getPhone() ?? "";    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context) {          return Padding(            padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),            child: StatefulBuilder(builder: (context, setState) {              return Container(                height: MediaQuery.of(context).size.height * 0.88,                decoration: const BoxDecoration(                    color: bottomSheetBg,                    borderRadius: BorderRadius.only(                      topLeft: Radius.circular(22.0),                      topRight: Radius.circular(22.0),                    )),                child: SingleChildScrollView(                  scrollDirection: Axis.vertical,                  child: Padding(                    padding: const EdgeInsets.only(left: 14,right:14),                    child: Column(                      children: [                        Container(                            width: 50,                            margin: const EdgeInsets.only(top: 12),                            child: const Divider(                              height: 2,                              thickness: 2,                              color: bottomSheetline,                            )),                        Container(                          margin: const EdgeInsets.only(top: 20),                          child: const Text(                            "Match Making",                            style: TextStyle(                              fontWeight: FontWeight.bold, color: darkbrown, fontSize: 18),                          ),                        ),                        Container(                            alignment: Alignment.topLeft,                            margin: const EdgeInsets.only(top: 20,bottom:14),                            child: const Text(                              "Yajman's details",                              style: TextStyle(                                  fontWeight: FontWeight.w500,                                  color: text_new,                                  fontSize: 16),                            )),                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: (){                              },                              controller: matchFnameController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "First Name",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          controller: matchFnameController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(10.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "First Name",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              controller: matchLnameController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Last Name",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          controller: matchLnameController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            fillColor: white_blue,                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(10.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Last Name",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              controller: matchEmailcontroller,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Email",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          controller: matchEmailcontroller,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            fillColor: white_blue,                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(10.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Email",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                          margin: const EdgeInsets.only(top: 10),                          alignment: Alignment.center,                          padding: const EdgeInsets.only(left: 14, right: 10),                          decoration: BoxDecoration(                            border: Border.all(                              color: Colors.grey,                              width: 1,                            ),                            borderRadius: const BorderRadius.all(                              Radius.circular(18),                            ),                          ),                          child: Row(                            children: [                              GestureDetector(                                child: Text(countryCode,                                    style: const TextStyle(                                        color: text_dark,                                        fontWeight: FontWeight.w600,                                        fontSize: 14)),                                onTap: (){                                  countryDialog(setState);                                },                              ),                              Container(                                margin: const EdgeInsets.only(left: 10),                                height: 20,                                width: 1,                                color: text_light,                              ),                              Flexible(                                child:TextField(                                  controller: matchNumberController,                                  maxLength: 12,                                  keyboardType: TextInputType.number,                                  cursorColor: text_dark,                                  style: const TextStyle(                                      color: title,                                      fontSize: 14,                                      fontWeight: FontWeight.w500),                                  decoration: InputDecoration(                                    contentPadding: const EdgeInsets.only(left:15,top:20,bottom:20),                                    fillColor: bottomSheetBg,                                    counterText: "",                                    border: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(14.0),                                        borderSide: const BorderSide(                                            width: 0, style: BorderStyle.none)),                                    filled: true,                                    hintText: "Mobile Number",                                    hintStyle: const TextStyle(                                      color: text_dark,                                      fontSize: 14,                                      fontWeight: FontWeight.w900,                                    ),                                  ),                                ),                              )                            ],                          ),                        ),                       /* Container(                          alignment: Alignment.center,                          padding: const EdgeInsets.only(left: 14, right: 10),                          decoration: const BoxDecoration(                            color: white_blue,                            borderRadius: BorderRadius.all(                              Radius.circular(10),                            ),                          ),                          child: Row(                            children: [                              GestureDetector(                                child:  Text(countryCode,                                    style: const TextStyle(                                        color: text_dark,                                        fontWeight: FontWeight.w600,                                        fontSize: 14)),                                onTap: (){                                  countryDialog(setState);                                },                              ),                              Container(                                margin: const EdgeInsets.only(left: 10),                                height: 20,                                width: 1,                                color: text_light,                              ),                              Flexible(                                child:TextField(                                  controller: matchNumberController,                                  maxLength: 12,                                  keyboardType: TextInputType.number,                                  cursorColor: text_dark,                                  style: const TextStyle(                                      color: title,                                      fontSize: 14,                                      fontWeight: FontWeight.w600),                                  decoration: InputDecoration(                                    contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                    fillColor: white_blue,                                    counterText: "",                                    border: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(10.0),                                        borderSide: const BorderSide(                                            width: 0, style: BorderStyle.none)),                                    filled: true,                                    hintText: "Mobile Number",                                    hintStyle: const TextStyle(                                      color: text_dark,                                      fontSize: 14,                                      fontWeight: FontWeight.w900,                                    ),                                  ),                                ),                              )                            ],                          ),                        ), */                        Container(height: 12,),                        Container(                            margin: const EdgeInsets.only(top: 10, bottom: 10),                            alignment: Alignment.topLeft,                            child: const Text(                              "Girl's details",                              style: TextStyle(                                fontWeight: FontWeight.w500,                                color: text_new,                                fontSize: 16),                            )),                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: (){                              },                              controller: matchGirlFnameController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "First Name",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          controller: matchGirlFnameController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            fillColor: white_blue,                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "First Name",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: (){                              },                              controller: matchGirlLNameController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Last Name",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                     /*   TextField(                          controller: matchGirlLNameController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            fillColor: white_blue,                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Last Name",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: () async {                                _setDatePicker(matchGirlBirthDateController);                              },                              readOnly: true,                              controller: matchGirlBirthDateController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Birth date",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          onTap: () async {                            _setDatePicker(matchGirlBirthDateController);                          },                          controller: matchGirlBirthDateController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          readOnly: true,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            counterText: "",                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Birth date",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: () async {                                _setTimePicker(matchGirlBirthTimeController,setState);                              },                              readOnly:true,                              controller: matchGirlBirthTimeController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Birth time",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          onTap: () async {                            _setTimePicker(matchGirlBirthTimeController);                          },                          readOnly:true,                          controller: matchGirlBirthTimeController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Birth time",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              readOnly: true,                              onTap: (){                                FocusScope.of(context).requestFocus(FocusNode());                                placesDialog(matchGirlBirthPlaceController, setState);                              },                              controller: matchGirlBirthPlaceController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Birth Place",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                     /*  TextField(                          controller: matchGirlBirthPlaceController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          readOnly: true,                          onTap: (){                            FocusScope.of(context).requestFocus(FocusNode());                            placesDialog(matchGirlBirthPlaceController, setState);                          },                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Birth Place",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            alignment: Alignment.topLeft,                            margin: const EdgeInsets.only(                                top: 20, bottom: 10, right: 14),                            child: const Text(                              "Boy's details",                              style: TextStyle(                                  fontWeight: FontWeight.w500,                                  color: text_new,                                  fontSize: 16),                            )),                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              controller: matchBoyFNameController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "First Name",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          controller: matchBoyFNameController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "First Name",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              controller: matchBoyLNameController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Last Name",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          controller: matchBoyLNameController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            counterText: "",                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Last Name",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: () async {                                _setDatePicker(matchBoyBirthDateController);                              },                              readOnly: true,                              controller: matchBoyBirthDateController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Birth date",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          onTap: () async {                            _setDatePicker(matchBoyBirthDateController);                          },                          controller: matchBoyBirthDateController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          readOnly: true,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            counterText: "",                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Birth date",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: () async {                                _setTimePicker(matchBoyBirthTimeController,setState);                              },                              controller: matchBoyBirthTimeController,                              readOnly: true,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Birth time",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                       /* TextField(                          onTap: () async {                            _setTimePicker(matchBoyBirthTimeController);                          },                          controller: matchBoyBirthTimeController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          readOnly: true,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            counterText: "",                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Birth time",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 14),                            child: TextField(                              onTap: (){                                FocusScope.of(context).requestFocus(FocusNode());                                placesDialog(matchBoyBirthPlaceController, setState);                              },                              controller: matchBoyBirthPlaceController,                              readOnly: true,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "BirthPlace",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                      /*  TextField(                          controller: matchBoyBirthPlaceController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          readOnly: true,                          onTap: (){                            FocusScope.of(context).requestFocus(FocusNode());                            placesDialog(matchBoyBirthPlaceController, setState);                          },                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            counterText: "",                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "BirthPlace",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                            margin: const EdgeInsets.only(top: 16),                            child: TextField(                              minLines: 4,                              maxLines: 4,                              controller: matchNoteController,                              keyboardType: TextInputType.text,                              cursorColor: Colors.grey,                              decoration: InputDecoration(                                border: OutlineInputBorder(                                    borderRadius: BorderRadius.circular(20),                                    borderSide: const BorderSide(color: Colors.grey)                                ),                                focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.circular(20),                                  borderSide: const BorderSide(color: Colors.grey,),                                ),                                labelText: "Note",                                labelStyle: const TextStyle(color: text_new),                                     ),                            )                        ),                     /*   TextField(                          controller: matchNoteController,                          minLines: 4,                          maxLines: 4,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          decoration: InputDecoration(                            fillColor: white_blue,                            contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(12.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Note",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ), */                        Container(                          margin: const EdgeInsets.only(left:14,right:14,top:10),                          child: const Divider(                            thickness: 1,                            color: text_light,                            endIndent: 1,                          ),                        ),                        Container(height: 22,),                        TextButton(                          onPressed: () {                            if (matchFnameController.text.isEmpty)                            {                              showToast('Please enter first name', context);                            }                            else if (matchLnameController.text.isEmpty)                            {                              showToast('Please enter last name', context);                            }                            else if (matchEmailcontroller.text.isEmpty)                            {                              showToast("Please enter email", context);                            }                            else if (matchNumberController.text.isEmpty)                            {                              showToast("Please enter phone number", context);                            }                            else if (matchGirlFnameController.text.isEmpty)                            {                              showToast("Please enter girl first name", context);                            }                            else if (matchGirlLNameController.text.isEmpty)                            {                              showToast("Please enter girl last name", context);                            }                            else if (matchGirlBirthDateController.text.isEmpty)                            {                              showToast("Please enter girl birth", context);                            }                            else if (matchGirlBirthTimeController.text.isEmpty)                            {                              showToast("Please enter girl birth time", context);                            }                            else if (matchGirlBirthPlaceController.text.isEmpty)                            {                              showToast("Please enter girl birth place", context);                            }                            else if (matchBoyFNameController.text.isEmpty)                            {                              showToast("Please enter boy first name", context);                            }                            else if (matchBoyLNameController.text.isEmpty)                            {                              showToast("Please enter boy last name", context);                            }                            else if (matchBoyBirthPlaceController.text.isEmpty)                            {                              showToast("Please enter boy birthplace", context);                            }                            else if (matchBoyBirthDateController.text.isEmpty)                            {                              showToast("Please enter boy birth date", context);                            }                            else                            {                              _confirmMatchMaking();                            }                          },                          style: ButtonStyle(                            shape: MaterialStateProperty.all<RoundedRectangleBorder>(                              RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0), side: const BorderSide(color: light_yellow, width: 0.5)),                            ),                            backgroundColor: MaterialStateProperty.all<Color>(light_yellow),                          ),                          child: Padding(                            padding: const EdgeInsets.all(4.0),                            child: Row(                              mainAxisAlignment: MainAxisAlignment.center,                              crossAxisAlignment: CrossAxisAlignment.center,                              children: const [                                Text('Review Request', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w400, color: title),),                              ],                            ),                          ),                        ),                        Container(height: 22,),                       /* InkWell(                          onTap: () {                            if (matchFnameController.text.isEmpty)                            {                              showToast('Please enter first name', context);                            }                            else if (matchLnameController.text.isEmpty)                            {                              showToast('Please enter last name', context);                            }                            else if (matchEmailcontroller.text.isEmpty)                            {                              showToast("Please enter email", context);                            }                            else if (matchNumberController.text.isEmpty)                            {                              showToast("Please enter phone number", context);                            }                            else if (matchGirlFnameController.text.isEmpty)                            {                              showToast("Please enter girl first name", context);                            }                            else if (matchGirlLNameController.text.isEmpty)                            {                              showToast("Please enter girl last name", context);                            }                            else if (matchGirlBirthDateController.text.isEmpty)                            {                              showToast("Please enter girl birth", context);                            }                            else if (matchGirlBirthTimeController.text.isEmpty)                            {                              showToast("Please enter girl birth time", context);                            }                            else if (matchGirlBirthPlaceController.text.isEmpty)                            {                              showToast("Please enter girl birth place", context);                            }                            else if (matchBoyFNameController.text.isEmpty)                            {                              showToast("Please enter boy first name", context);                            }                            else if (matchBoyLNameController.text.isEmpty)                            {                              showToast("Please enter boy last name", context);                            }                            else if (matchBoyBirthPlaceController.text.isEmpty)                            {                              showToast("Please enter boy birthplace", context);                            }                            else if (matchBoyBirthDateController.text.isEmpty)                            {                              showToast("Please enter boy birth date", context);                            }                            else                            {                              _confirmMatchMaking();                            }                          },                          child: Container(                            alignment: Alignment.bottomRight,                            padding: const EdgeInsets.only(left: 16, right: 16, top: 10, bottom: 20),                            child:  Card(                              shape: RoundedRectangleBorder(                                borderRadius: BorderRadius.circular(20.0),                              ),                              color: light_yellow,                              elevation: 10,                              child: const Padding(                                padding: EdgeInsets.all(14.0),                                child: Text("Review Request",                                  style: TextStyle(                                      fontSize: 14,                                      color: title,                                      fontWeight: FontWeight.bold),textAlign: TextAlign.center,),                              ),                            ),                          ),                        ) */                      ],                    ),                  ),                ),              );            }),          );        }).then((value) {      matchFnameController.text = '';      matchLnameController.text = '';      matchEmailcontroller.text = '';      matchNumberController.text = '';      matchGirlFnameController.text = '';      matchGirlLNameController.text = '';      matchGirlBirthDateController.text = '';      matchGirlBirthTimeController.text = '';      matchGirlBirthPlaceController.text = '';      matchBoyFNameController.text = '';      matchBoyLNameController.text = '';      matchBoyBirthDateController.text = '';      matchBoyBirthTimeController.text = '';      matchBoyBirthPlaceController.text = '';      matchNoteController.text = '';    },);  }  void _reviewBookingDialog() {    showModalBottomSheet(        context: context,        isScrollControlled: true,backgroundColor: Colors.transparent,        builder: (context){          return StatefulBuilder(              builder: (context,setState){                return Container(                  height: MediaQuery.of(context).size.height * 0.88,                  decoration: const BoxDecoration(                    color: Colors.white,                    borderRadius: BorderRadius.only(                      topLeft: Radius.circular(12.0),                      topRight: Radius.circular(12.0),                    ),                  ),                  child: SingleChildScrollView(                    child: Column(                      children: [                        Container(                            width: 50,                            margin: const EdgeInsets.only(top: 12),                            child: const Divider(                              height: 1.5,                              thickness: 1.5,                              color: Colors.grey,                            )                        ),                        Container(                          margin: const EdgeInsets.only(top: 10),                          child: const Text(                            "Review Priest Booking",                            style: TextStyle(                                fontWeight: FontWeight.bold, color: title, fontSize: 18),                          ),                        ),                        Container(                          alignment: Alignment.centerLeft,                          margin:                          const EdgeInsets.only(top: 20, left: 20, right: 18, bottom: 10),                          child: const Text(                            "User Details",                            style: TextStyle(                                fontWeight: FontWeight.bold,                                color: black,                                fontSize: 18),                          ),                        ),                        Container(                          padding: const EdgeInsets.only(left: 4, right: 4, top: 6, bottom: 6),                          alignment: Alignment.centerLeft,                          width: MediaQuery.of(context).size.width,                          margin: const EdgeInsets.only(left: 14, right: 14),                          decoration: BoxDecoration(                              borderRadius: BorderRadius.circular(6),                              color: white_blue),                          child: Column(                            mainAxisAlignment: MainAxisAlignment.start,                            crossAxisAlignment: CrossAxisAlignment.start,                            children: [                              Container(                                margin: const EdgeInsets.only(left: 10, right: 10, top: 4, bottom: 4),                                child: Text(                                  sessionManager.getName().toString() + sessionManager.getLastName().toString(),                                  style: const TextStyle(                                      fontWeight: FontWeight.bold,                                      fontSize: 14,                                      color: title),                                  textAlign: TextAlign.start,                                ),                              ),                              Container(                                margin: const EdgeInsets.only(                                    left: 10, right: 10, top: 4, bottom: 4),                                child: Text(                                  sessionManager.getEmail().toString(),                                  style: const TextStyle(                                      fontWeight: FontWeight.w400,                                      fontSize: 14,                                      color: title),                                  textAlign: TextAlign.start,                                ),                              ),                              Container(                                margin: const EdgeInsets.only(                                    left: 10, right: 10, bottom: 4),                                child: Text(                                  sessionManager.getPhone().toString(),                                  style: const TextStyle(                                      fontWeight: FontWeight.w400,                                      fontSize: 14,                                      color: title),                                  textAlign: TextAlign.start,                                ),                              )                            ],                          ),                        ),                        Container(                          alignment: Alignment.centerLeft,                          margin: const EdgeInsets.only(top: 12, left: 20, right: 18, bottom: 10),                          child: const Text(                            "Puja Details",                            style: TextStyle(                                fontWeight: FontWeight.bold,                                color: black,                                fontSize: 18),                          ),                        ),                        Container(                          padding: const EdgeInsets.only(                              left: 4, right: 4, bottom: 6),                          alignment: Alignment.centerLeft,                          width: MediaQuery.of(context).size.width,                          margin: const EdgeInsets.only(left: 14, right: 14),                          decoration: BoxDecoration(                              borderRadius: BorderRadius.circular(6),                              color: white_blue),                          child: Column(                            mainAxisAlignment: MainAxisAlignment.start,                            crossAxisAlignment: CrossAxisAlignment.start,                            children: [                              Container(                                margin: const EdgeInsets.only(                                    left: 10, right: 10, top: 4, bottom: 4),                                child:  Text(                                  selectPujaController.value.text.toString()  ,                                  style: const TextStyle(                                      fontWeight: FontWeight.bold,                                      fontSize: 16,                                      color: title),                                  textAlign: TextAlign.start,                                ),                              ),                              Container(                                margin: const EdgeInsets.only(                                    left: 10, right: 10, top: 4, bottom: 4),                                child:  Text(                                  pujaDescription,                                  style: const TextStyle(                                      fontWeight: FontWeight.w400,                                      fontSize: 14,                                      color: title),                                  textAlign: TextAlign.start,                                ),                              ),                            ],                          ),                        ),                        Container(                          alignment: Alignment.centerLeft,                          margin:                          const EdgeInsets.only(top: 12, left: 20, right: 18, bottom: 10),                          child:  const Text(                            "Puja Date & Time:",                            style: TextStyle(                                fontWeight: FontWeight.bold,                                color: black,                                fontSize: 18),                          ),                        ),                        Container(                          padding: const EdgeInsets.only(                              left: 4, right: 4, top: 6, bottom: 6),                          alignment: Alignment.centerLeft,                          width: MediaQuery.of(context).size.width,                          margin: const EdgeInsets.only(left: 14, right: 14),                          decoration: BoxDecoration(                              borderRadius: BorderRadius.circular(6),                              color: white_blue),                          child: Column(                            mainAxisAlignment: MainAxisAlignment.start,                            crossAxisAlignment: CrossAxisAlignment.start,                            children: [                              Container(                                margin: const EdgeInsets.only(                                    left: 10, right: 10, top: 4, bottom: 4),                                child:  Text(                                  dateTimeForShow,                                  style: const TextStyle(                                      fontWeight: FontWeight.w400,                                      fontSize: 14,                                      color: title),                                  textAlign: TextAlign.start,                                ),                              ),                            ],                          ),                        ),                        Container(                          alignment: Alignment.centerLeft,                          margin:                          const EdgeInsets.only(top: 12, left: 20, right: 18, bottom: 10),                          child:  const Text(                            "Address Details",                            style: TextStyle(                                fontWeight: FontWeight.bold,                                color: black,                                fontSize: 18),                          ),                        ),                        Container(                          padding: const EdgeInsets.only(left: 4, right: 4, top: 6, bottom: 6),                          alignment: Alignment.centerLeft,                          width: MediaQuery.of(context).size.width,                          margin: const EdgeInsets.only(left: 14, right: 14),                          decoration: BoxDecoration(                              borderRadius: BorderRadius.circular(6),                              color: white_blue                          ),                          child: Column(                            mainAxisAlignment: MainAxisAlignment.start,                            crossAxisAlignment: CrossAxisAlignment.start,                            children: [                              Container(                                margin: const EdgeInsets.only(                                    left: 10, right: 10, top: 4, bottom: 4),                                child: Text(                                  addressController.value.text ,                                  style: const TextStyle(                                      fontWeight: FontWeight.w400,                                      fontSize: 14,                                      color: title),                                  textAlign: TextAlign.start,                                ),                              ),                            ],                          ),                        ),                        Visibility(                          visible: false,                          child: Container(                            alignment: Alignment.centerLeft,                            margin:                            const EdgeInsets.only(top: 12, left: 20, right: 18, bottom: 20),                            child:  const Text(                              "Pujari Near You:",                              style: TextStyle(                                  fontWeight: FontWeight.bold,                                  color: black,                                  fontSize: 18),                            ),                          ),                        ),                        Visibility(                          visible:false,                            child: ListView.builder( shrinkWrap: true,                                physics: const ScrollPhysics(),                                scrollDirection: Axis.vertical,                                itemCount: _prayerList.length,                                itemBuilder: (BuildContext context, int i){                                return Container(child:const Text(""));                                }                            )                        ),                        Container(                          margin: const EdgeInsets.only(left: 18, right: 10, bottom: 12,top:10),                          child: Row(                            mainAxisAlignment: MainAxisAlignment.start,                            children: <Widget>[                              const Text(                                "Will you pick up priest? : ",                                textAlign: TextAlign.left,                                style: TextStyle(fontWeight: FontWeight.normal),                              ),                              Text(                                isPickupPriest ? "Yes" : "No",                                style: const TextStyle(                                    fontWeight: FontWeight.bold,                                    color: title,                                    fontSize: 14),                              )                            ],                          ),                        ),                        Container(                          margin: const EdgeInsets.only(                              top: 10, left: 18, right: 10, bottom: 12),                          child: Row(                            mainAxisAlignment: MainAxisAlignment.start,                            children: <Widget>[                              const Text(                                "Do You Want Puja Goods from Kuber? :",                                textAlign: TextAlign.left,                                style: TextStyle(fontWeight: FontWeight.normal),                              ),                              Text(isWantGoods ? "Yes" : "No",                                textAlign: TextAlign.left,                                style: const TextStyle(                                    fontWeight: FontWeight.bold,                                    color: title,                                    fontSize: 14),                              )                            ],                          ),                        ),                        Row(                          children: [                            Expanded(                              child: GestureDetector(                                onTap: (){                                  Navigator.pop(context);                                },                                child: Container(                                  margin: const EdgeInsets.only(top: 10,bottom: 20),                                  padding: const EdgeInsets.only(left: 14,right: 14),                                  child: Card(                                    shape: RoundedRectangleBorder(                                      borderRadius: BorderRadius.circular(20.0),                                    ),                                    color: light_yellow,                                    elevation: 10,                                    child: Padding(                                      padding: const EdgeInsets.all(14.0),                                      child: Text("Edit",                                        style: getTextStyle(                                            fontSize: 14,                                            color: title,                                            fontWeight: FontWeight.w600),textAlign: TextAlign.center,),                                    ),                                  ),                                ),                              ),                            ),                            Expanded(                              child: GestureDetector(                                onTap: (){                                  Navigator.pop(context);                                  bookPujaRequest();                                },                                child: Container(                                  margin: const EdgeInsets.only(top: 10,bottom: 20),                                  padding: const EdgeInsets.only(left: 14,right: 14),                                  child: Card(                                    shape: RoundedRectangleBorder(                                      borderRadius: BorderRadius.circular(20.0),                                    ),                                    color: light_yellow,                                    elevation: 10,                                    child: const Padding(                                      padding: EdgeInsets.all(14.0),                                      child: Text("Submit",                                        style: TextStyle(                                            fontSize: 14,                                            color: title,                                            fontWeight: FontWeight.w600),textAlign: TextAlign.center,),                                    ),                                  ),                                ),                              ),                            )                          ],                        )                      ],                    ),                  ),                );              }              );        }        );  }  void _bookPristValidation() {     if(sessionManager.checkIsLoggedIn()??false)    {      if(addressController.text.isEmpty)      {        showToast("Please  select pooja address", context);        return;      }    }    else    {      if(addressController.text.toString() == "Select Address")      {        showToast("Please select pooja ", context);        return ;      }    }    if(pujaId.isEmpty)    {      showToast("Please select pooja",context);      return;    }     if(selectPujaController.text.isEmpty)    {      showToast("Please select pooja",context);      return;    }     if(leaveDetailController.text.isEmpty)    {      if(selectedDate.toString()==("Pick Date"))      {        showToast("Select date for pooja ",context);        return;      }      if(selectedTime.toString()==("Pick Time"))      {        showToast("Select time for pooja ",context);        return;      }    }      _reviewBookingDialog();  }  bookPujaRequest() async {    setState(() {      _isLoading = true;    });    Navigator.pop(context);    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(MAIN_URL + bookPuja);/*    @Field("user_id") user_id: String,    @Field("puja_id") puja_id: String,    @Field("booking_date") booking_date: String,    @Field("booking_address") booking_address: String,    @Field("auspicious_description") auspicious_description: String,    @Field("pickup_by_user") pickup_by_user: String,    @Field("puja_goods_provide_by_user") puja_goods_provide_by_user: String,*/    Map<String, String> jsonBody = {      'user_id' : sessionManager.getUserId().toString(),      'email' : sessionManager.getEmail().toString(),      'puja_id' : pujaId,      'booking_date' : dateTimeForPass,      'booking_address' : addressController.text,      'auspicious_description' : leaveDetailController.text,      'pickup_by_user' : isPickupPriest ? "1" : "0",      'puja_goods_provide_by_user' : isWantGoods ? "1" : "0",    };    final response = await http.post(url, body: jsonBody);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = CommonResponseModel.fromJson(user);    if (statusCode == 200 && dataResponse.success == 1) {      _showAlertDialog("assets/images/vector.png", "Your request\nto book Priest is received,\nwill contact you shortly.");      setState(() {        _isLoading = false;      });    } else {      setState(() {        _isLoading = false;      });    }  }  Future<void> _getAddressFromLatLng() async {    await placemarkFromCoordinates(lat, long).then((List<Placemark> placemarks) {      Placemark place = placemarks[0];      setState(() {        _currentAddress = '${place.street}, ${place.subLocality}, ${place.subAdministrativeArea}, ${place.postalCode}';      });      //addressController.text = _currentAddress;    }).catchError((e) {      debugPrint(e);    });  }  void _openRequestPrayerBottomSheet() {    prayerFNameController.text = sessionManager.getName().toString();    prayerLNameController.text = sessionManager.getLastName().toString();    prayerEmailController.text = sessionManager.getEmail().toString();    prayerDOBController.text = universalDateConverter( "yyyy-MM-dd","MMMM dd, yyyy", sessionManager.getDob() ?? "");    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context){          return Padding(            padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),            child: StatefulBuilder(                builder: (context,setState){                  return Wrap(                    children: [                      Container(                        decoration: const BoxDecoration(                          color: bottomSheetBg,                          borderRadius: BorderRadius.only(                            topLeft: Radius.circular(22.0),                            topRight: Radius.circular(22.0),                          ),                        ),                        child: SingleChildScrollView(                          scrollDirection: Axis.vertical,                          child: Container(                            margin: const EdgeInsets.only(left: 14,right: 14),                            child: Column(                              children: [                                Container(                                    width: 50,                                    margin: const EdgeInsets.only(top: 12),                                    child: const Divider(                                      height: 2,                                      thickness: 2,                                      color: bottomSheetline,                                    )                                ),                                Container(                                  margin: const EdgeInsets.only(top:20,bottom: 20),                                  child: const Text(                                    "Request a Prayer",                                    style: TextStyle(fontWeight: FontWeight.bold, color: darkbrown, fontSize: 18),                                  ),                                ),                                Container(                                  margin: const EdgeInsets.only(top: 10),                                  child: TextField(                                    onTap: (){                                    },                                    controller: prayerFNameController,                                    keyboardType: TextInputType.text,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: 'First name',                                      labelStyle: const TextStyle(color: text_new),                                     ),                                  )                                ),                              /*  Container(                                  margin: const EdgeInsets.only(top: 10),                                  alignment: Alignment.center,                                  decoration: BoxDecoration(                                      borderRadius: BorderRadius.circular(16.0),                                      color: white_blue),                                  child: Padding(                                    padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                    child: TextField(                                      controller: prayerFNameController,                                      keyboardType: TextInputType.text,                                      cursorColor: text_dark,                                      style: const TextStyle(                                          color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                      decoration: const InputDecoration(                                          fillColor: white_blue,                                          counterText: "",                                          border: InputBorder.none,                                          hintText: 'First name',                                          hintStyle: TextStyle(                                              color: text_dark,                                              fontSize: 14,                                              fontWeight: FontWeight.w900)),                                    ),                                  ),                                ), */                                Container(                                    margin: const EdgeInsets.only(top: 20),                                    child: TextField(                                      onTap: (){                                      },                                      controller: prayerLNameController,                                      keyboardType: TextInputType.text,                                      cursorColor: Colors.grey,                                      decoration: InputDecoration(                                        border: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey)                                        ),                                        focusedBorder: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey,),                                        ),                                        labelText: 'Last name',                                        labelStyle: const TextStyle(color: text_new),                                     ),                                    )                                ),                              /*  Container(                                  margin: const EdgeInsets.only(top: 10),                                  alignment: Alignment.center,                                  decoration: BoxDecoration(                                      borderRadius: BorderRadius.circular(16.0),                                      color: white_blue),                                  child: Padding(                                    padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                    child: TextField(                                      controller: prayerLNameController,                                      keyboardType: TextInputType.text,                                      cursorColor: text_dark,                                      style: const TextStyle(                                          color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                      decoration: const InputDecoration(                                          fillColor: white_blue,                                          counterText: "",                                          border: InputBorder.none,                                          hintText: 'Last name',                                          hintStyle: TextStyle(                                              color: text_dark,                                              fontSize: 14,                                              fontWeight: FontWeight.w900)),                                    ),                                  ),                                ), */                                Container(                                    margin: const EdgeInsets.only(top: 20),                                    child: TextField(                                      onTap: () async {                                        _setDatePicker(prayerDOBController);                                      },                                      readOnly: true,                                      controller: prayerDOBController,                                      keyboardType: TextInputType.text,                                      cursorColor: Colors.grey,                                      decoration: InputDecoration(                                        border: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey)                                        ),                                        focusedBorder: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey,),                                        ),                                        labelText: 'Date of Birth',                                        labelStyle: const TextStyle(color: text_new),                                     ),                                    )                                ),                               /* Container(                                  margin: const EdgeInsets.only(top: 10),                                  alignment: Alignment.center,                                  decoration: BoxDecoration(                                      borderRadius: BorderRadius.circular(16.0),                                      color: white_blue),                                  child:  Padding(                                    padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                    child: TextField(                                      readOnly: true,                                      controller:prayerDOBController,                                      cursorColor: text_dark,                                      onTap: () async {                                        _setDatePicker(prayerDOBController);                                      },                                      style: const TextStyle(                                          color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                      decoration: const InputDecoration(                                          fillColor: white_blue,                                          border: InputBorder.none,                                          hintText: 'Date of Birth',                                          hintStyle: TextStyle(                                              color: text_dark,                                              fontSize: 14,                                              fontWeight: FontWeight.w900)),                                    ),                                  ),                                ),  */                                Container(                                    margin: const EdgeInsets.only(top: 20),                                    child: TextField(                                      controller: prayerEmailController,                                      keyboardType: TextInputType.text,                                      cursorColor: Colors.grey,                                      decoration: InputDecoration(                                        border: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey)                                        ),                                        focusedBorder: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey,),                                        ),                                        labelText: 'Email',                                        labelStyle: const TextStyle(color: text_new),                                     ),                                    )                                ),                              /*  Container(                                  margin: const EdgeInsets.only(top: 10),                                  alignment: Alignment.center,                                  decoration: BoxDecoration(                                      borderRadius: BorderRadius.circular(16.0),                                      color: white_blue),                                  child: Padding(                                    padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                    child: TextField(                                      controller: prayerEmailController,                                      keyboardType: TextInputType.text,                                      cursorColor: text_dark,                                      style: const TextStyle(                                          color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                      decoration: const InputDecoration(                                          fillColor: white_blue,                                          counterText: "",                                          border: InputBorder.none,                                          hintText: 'Email',                                          hintStyle: TextStyle(                                              color: text_dark,                                              fontSize: 14,                                              fontWeight: FontWeight.w900)),                                    ),                                  ),                                ), */                                Container(                                    margin: const EdgeInsets.only(top: 20),                                    child: TextField(                                      onTap: (){                                        _openPrayerTypeBottomSheet(setState);                                      },                                      readOnly: true,                                      controller: PrayerForController,                                      keyboardType: TextInputType.text,                                      cursorColor: Colors.grey,                                      decoration: InputDecoration(                                        border: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey)                                        ),                                        focusedBorder: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey,),                                        ),                                        labelText: 'Prayer For',                                        labelStyle: const TextStyle(color: text_new),                                     ),                                    )                                ),                                /* Container(                                  margin: const EdgeInsets.only(top: 10),                                  alignment: Alignment.center,                                  decoration: BoxDecoration(                                      borderRadius: BorderRadius.circular(16.0),                                      color: white_blue),                                  child:  Padding(                                    padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                    child: TextField(                                      controller: PrayerForController,                                      onTap: (){                                        _openPrayerTypeBottomSheet(setState);                                      },                                      readOnly: true,                                      keyboardType: TextInputType.text,                                      cursorColor: text_dark,                                      style: const TextStyle(                                          color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                      decoration: const InputDecoration(                                          fillColor: white_blue,                                          counterText: "",                                          border: InputBorder.none,                                          hintText: 'Prayer For',                                          hintStyle: TextStyle(                                              color: text_dark,                                              fontSize: 14,                                              fontWeight: FontWeight.w900)),                                    ),                                  ),                                ), */                                Container(                                    alignment: Alignment.topLeft,                                    margin: const EdgeInsets.only(top: 20),                                    child: TextField(                                      minLines: 4,                                      maxLines: 4,                                      controller: prayerNotesController,                                      keyboardType: TextInputType.text,                                      cursorColor: Colors.grey,                                      decoration: InputDecoration(                                        border: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey)                                        ),                                        focusedBorder: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey,),                                        ),                                        counterText: "",                                        labelText: 'Leave Your Detail',                                        labelStyle: const TextStyle(color: text_new),                                     ),                                    )                                ),                              /*  Container(                                  alignment: Alignment.center,                                  margin: const EdgeInsets.only(top: 10),                                  decoration: BoxDecoration(                                      borderRadius: BorderRadius.circular(20.0),                                      color: white_blue),                                  child:  Padding(                                    padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                    child: TextField(                                      controller: prayerNotesController,                                      minLines: 4,                                      maxLines: 4,                                      keyboardType: TextInputType.text,                                      cursorColor: title,                                      style:  const TextStyle(                                          color: title, fontSize: 14, fontWeight: FontWeight.w600),                                      decoration: const InputDecoration(                                          counterText: "",                                          border: InputBorder.none,                                          hintText: 'Leave Your Detail',                                          hintStyle: TextStyle(                                              color: text_dark,                                              fontSize: 14,                                              fontWeight: FontWeight.w900)),                                    ),                                  ),                                ), */                                Container(height: 22,),                                TextButton(                                  onPressed: (){                                    if (prayerFNameController.value.text.isEmpty)                                    {                                      showToast("Please enter first name", context);                                    }                                    else if (prayerLNameController.value.text.isEmpty)                                    {                                      showToast("Please enter last name", context);                                    }                                    else if (prayerDOBController.value.text.isEmpty)                                    {                                      showToast("Please enter date of birth", context);                                    }                                    else if (prayerEmailController.value.text.isEmpty)                                    {                                      showToast("Please enter email", context);                                    }                                    else if (PrayerForController.value.text.isEmpty)                                    {                                      showToast("Please enter prayer type", context);                                    }                                    else                                    {                                      _confirmPrayerRequest();                                    }                                  },                                  style: ButtonStyle(                                    shape: MaterialStateProperty.all<RoundedRectangleBorder>(                                      RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0), side: const BorderSide(color: light_yellow, width: 0.5)),                                    ),                                    backgroundColor: MaterialStateProperty.all<Color>(light_yellow),                                  ),                                  child: Padding(                                    padding: const EdgeInsets.all(4.0),                                    child: Row(                                      mainAxisAlignment: MainAxisAlignment.center,                                      crossAxisAlignment: CrossAxisAlignment.center,                                      children: const [                                        Text('Review Request', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w400, color: title),),                                      ],                                    ),                                  ),                                ),                                Container(height: 22,),                              /*  InkWell(                                  child: Padding(                                    padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),                                    child: Container(                                      alignment: Alignment.bottomRight,                                      margin: const EdgeInsets.only(top: 10,bottom: 30),                                      padding: const EdgeInsets.only(left: 14,right: 14),                                      child: Card(                                        shape: RoundedRectangleBorder(                                          borderRadius: BorderRadius.circular(20.0),                                        ),                                        color: light_yellow,                                        elevation: 10,                                        child: const Padding(                                          padding: EdgeInsets.all(14.0),                                          child: Text("Review Request",                                            style: TextStyle(                                                fontSize: 14,                                                color: title,                                                fontWeight: FontWeight.bold),textAlign: TextAlign.center,),                                        ),                                      ),                                    ),                                  ),                                  onTap: (){                                    if (prayerFNameController.value.text.isEmpty)                                      {                                        showToast("Please enter first name", context);                                      }                                    else if (prayerLNameController.value.text.isEmpty)                                      {                                        showToast("Please enter last name", context);                                      }                                    else if (prayerDOBController.value.text.isEmpty)                                      {                                        showToast("Please enter date of birth", context);                                      }                                    else if (prayerEmailController.value.text.isEmpty)                                      {                                        showToast("Please enter email", context);                                      }                                    else if (PrayerForController.value.text.isEmpty)                                      {                                        showToast("Please enter prayer type", context);                                      }                                    else                                      {                                        _confirmPrayerRequest();                                      }                                  },                                ) */                              ],                            ),                          ),                        ),                      ),                    ],                  );                }                ),          );        });  }  void _openPrayerTypeBottomSheet(StateSetter updateState){    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context){          return StatefulBuilder(              builder: (context,setState){                return Wrap(                  children: [                    Container(                      decoration: const BoxDecoration(                          color: Colors.white,                          borderRadius: BorderRadius.only(                            topLeft: Radius.circular(12.0),                            topRight: Radius.circular(12.0),                          ),                        ),                      child: SingleChildScrollView(                        child: Column(                          children: [                            Container(                                width: 50,                                margin: const EdgeInsets.only(top: 12),                                child: const Divider(                                  height: 1.5,                                  thickness: 1.5,                                  color: Colors.grey,                                )                            ),                            Container(                              margin: const EdgeInsets.only(top: 10),                              child: const Text(                                "Request a Prayer",                                style: TextStyle(                                    fontWeight: FontWeight.bold, color: title, fontSize: 22),                              ),                            ),                            ListView.builder(                                shrinkWrap: true,                                physics: const ScrollPhysics(),                                scrollDirection: Axis.vertical,                                itemCount: _prayerList.length,                                itemBuilder: (BuildContext context, int i) {                                  return InkWell(                                    child: Container(                                      margin: const EdgeInsets.only(left: 14, right: 14, top: 6, bottom: 10),                                      child: Column(                                        children: [                                          Row(                                            children: [                                              Expanded(                                                child: Column(                                                    mainAxisAlignment: MainAxisAlignment.start,                                                    crossAxisAlignment: CrossAxisAlignment.start,                                                    children: [                                                      InkWell(                                                        child: Container(                                                          padding: const EdgeInsets.all(4),                                                          width: MediaQuery.of(context).size.width,                                                          margin: const EdgeInsets.only(top: 6, right: 6, left: 8),                                                          child: Text(                                                             toDisplayCase(_prayerList[i].prayer.toString()),                                                              style: const TextStyle(                                                                  fontSize: 16,                                                                  fontWeight:                                                                  FontWeight.w600,                                                                  color: title),                                                              textAlign: TextAlign.start                                                          ),                                                        ),                                                        onTap: (){                                                          prayerID = _prayerList[i].prayerId.toString();                                                          PrayerForController.text = toDisplayCase(_prayerList[i].prayer.toString());                                                          updateState((){});                                                          Navigator.pop(context);                                                        },                                                      ),                                                    ]),                                              ),                                            ],                                          ),                                        ],                                      ),                                    ),                                    onTap: (){                                      // Navigator.push(context, MaterialPageRoute(builder: (context) => BookingDetailsScreen(_bookingList[i].bookingId.toString())));                                    },                                  );                                })                          ],                        ),                      ),                    ),                  ],                );              });        });  }  void _confirmPrayerRequest() {    showModalBottomSheet(      context: context,      isScrollControlled: true,      backgroundColor: Colors.transparent,      builder: (context) {        return StatefulBuilder(            builder: (context, setState) {              return Wrap(                children: [                  Container(                    decoration: const BoxDecoration(                      color: Colors.white,                      borderRadius: BorderRadius.only(                        topLeft: Radius.circular(12.0),                        topRight: Radius.circular(12.0),                      ),                    ),                    child: SingleChildScrollView(                      child: Container(                        margin: const EdgeInsets.only(left: 14,right: 14),                        child: Column(                          children: [                            Container(                                width: 50,                                margin: const EdgeInsets.only(top: 12),                                child: const Divider(                                  height: 1.5,                                  thickness: 1.5,                                  color: Colors.grey,                                )),                            Container(                              margin: const EdgeInsets.only(top: 20,bottom: 20),                              child: const Text(                                "Confirm Request a Prayer",                                style: TextStyle(                                    fontWeight: FontWeight.bold, color: title, fontSize: 18),                              ),                            ),                            Container(                              padding: const EdgeInsets.only(left: 14, right: 10,top: 10),                              decoration: BoxDecoration(                                  borderRadius: BorderRadius.circular(20.0),                                  color: white_blue),                              child: Column(                                crossAxisAlignment: CrossAxisAlignment.start,                                mainAxisAlignment: MainAxisAlignment.start,                                children: [                                  Row(                                    children: [                                      const Expanded(                                        child: Padding(                                          padding: EdgeInsets.all(12),                                          child: Text("First Name",style: TextStyle(fontSize: 14,fontWeight: FontWeight.w700,color: text_light),),                                        ),                                      ),                                      Expanded(                                        child: Text(prayerFNameController.value.text,                                          style:const TextStyle(fontWeight: FontWeight.w700,color: text_dark,fontSize: 14)),                                      )                                    ],                                  ),                                  Row(                                    children: [                                      const Expanded(                                        child: Padding(                                          padding: EdgeInsets.all(12),                                          child: Text("Last Name",style: TextStyle(fontSize: 14,fontWeight: FontWeight.w700,color: text_light),),                                        ),                                      ),                                      Expanded(                                        child: Text(prayerLNameController.value.text,                                            style:const TextStyle(fontWeight: FontWeight.w700,color: text_dark,fontSize: 14)),                                      )                                    ],                                  ),                                  Row(                                    children: [                                      const Expanded(                                        child: Padding(                                          padding: EdgeInsets.all(12),                                          child: Text("Date of Birth",style: TextStyle(fontSize: 14,fontWeight: FontWeight.w700,color: text_light),),                                        ),                                      ),                                      Expanded(                                        child: Text(prayerDOBController.value.text,                                            style:const TextStyle(fontWeight: FontWeight.w700,color: text_dark,fontSize: 14)),                                      )                                    ],                                  ),                                  Row(                                    children: [                                      const Expanded(                                        child: Padding(                                          padding: EdgeInsets.all(12),                                          child: Text("Email",style: TextStyle(fontSize: 14,fontWeight: FontWeight.w700,color: text_light),),                                        ),                                      ),                                      Expanded(                                        child: Text(prayerEmailController.value.text,                                            style:const TextStyle(fontWeight: FontWeight.w700,color: text_dark,fontSize: 14)),                                      )                                    ],                                  ),                                  Row(                                    children:  [                                      const Expanded(                                        child: Padding(                                          padding: EdgeInsets.all(12),                                          child: Text("Prayer For",style: TextStyle(fontSize: 14,fontWeight: FontWeight.w700,color: text_light),),                                        ),                                      ),                                      Expanded(                                        child: Text(PrayerForController.value.text,                                            style:const TextStyle(fontWeight: FontWeight.w700,color: text_dark,fontSize: 14)),                                      )                                    ],                                  ),                                  Visibility(                                      visible: prayerNotesController.value.text.isNotEmpty,                                      child: Column(                                    children: [                                       const Padding(                                         padding: EdgeInsets.all(12.0),                                         child: Text(                                          "Notes",                                          style: TextStyle(                                              fontSize: 14,                                              fontWeight: FontWeight.w700,                                              color: text_light),                                           textAlign: TextAlign.start,                                      ),                                       ),                                      Padding(                                        padding: const EdgeInsets.all(12.0),                                        child: Text(                                          prayerNotesController.value.text,                                          style: const TextStyle(                                           fontWeight: FontWeight.w700,                                           color: title,                                           fontSize: 14),textAlign: TextAlign.start,),                                      )                                    ],                                  )),                                ],                              ),                            ),                            Container(                              margin: const EdgeInsets.only(top: 20,bottom: 20,),                              child: Row(                                mainAxisAlignment: MainAxisAlignment.end,                                crossAxisAlignment: CrossAxisAlignment.end,                                children: [                                  InkWell(                                    onTap: (){                                      Navigator.pop(context);                                    },                                    child: Container(                                      margin: const EdgeInsets.only(left: 12),                                      child: Card(                                        shape: RoundedRectangleBorder(                                          borderRadius: BorderRadius.circular(20.0),                                        ),                                        color: light_yellow,                                        elevation: 10,                                        child: const Padding(                                          padding: EdgeInsets.all(14.0),                                          child: Text("Edit Request",                                            style: TextStyle(                                                fontSize: 14,                                                color: title,                                                fontWeight: FontWeight.bold),textAlign: TextAlign.center,),                                        ),                                      ),                                    ),                                  ),                                  Container(                                    margin: const EdgeInsets.only(left: 12),                                    child: GestureDetector(                                      onTap: (){                                        Navigator.pop(context);                                        _savePrayerRequest();                                      },                                      child: Card(                                        shape: RoundedRectangleBorder(                                          borderRadius: BorderRadius.circular(20.0),                                        ),                                        color: light_yellow,                                        elevation: 10,                                        child: const Padding(                                          padding: EdgeInsets.all(14.0),                                          child: Text("Submit Request",                                            style: TextStyle(                                                fontSize: 14,                                                color: title,                                                fontWeight: FontWeight.bold),textAlign: TextAlign.center,),                                        ),                                      ),                                    ),                                  )                                ],                              ),                            )                          ],                        ),                      ),                    ),                  ),                ],              );            },        );      },    );  }  Future<void> placesDialog(TextEditingController controller, StateSetter updateState) async {    Prediction? prediction = await PlacesAutocomplete.show(      context: context,      apiKey: API_KEY,      mode: Mode.fullscreen,      components: [],      strictbounds: false,      region: "",      decoration: const InputDecoration(        hintText: 'Search',      ),      types: [],      language: "en",);    if (prediction != null) {      GoogleMapsPlaces _places = GoogleMapsPlaces(        apiKey: API_KEY,        apiHeaders: await const GoogleApiHeaders().getHeaders(),      );      PlacesDetailsResponse detail = await _places.getDetailsByPlaceId(prediction.placeId!);      controller.text = prediction.description.toString();      updateState((){});    }  }  _callListPrayer() async {     setState(() {       _isLoading = true;     });     HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [       HttpLogger(logLevel: LogLevel.BODY),     ]);     final url = Uri.parse(MAIN_URL + getPrayerList);     Map<String, String> jsonBody = {     };     final response = await http.post(url, body: jsonBody);     final statusCode = response.statusCode;     final body = response.body;     Map<String, dynamic> user = jsonDecode(body);     var prayerResponse = PrayerListResponseModel.fromJson(user);     if (statusCode == 200 && prayerResponse.success == 1) {       if (prayerResponse.prayers != null) {         _prayerList = prayerResponse.prayers!;       }       setState(() {         _isLoading = false;       });     } else {       setState(() {         _isLoading = false;       });     }   }  Future<void> _selectTime() async {    final TimeOfDay? pickedS = await showTimePicker(        context: context,        initialTime: TimeOfDay.now(),        builder: (BuildContext context, Widget? child) {          return Theme(            data: ThemeData.dark().copyWith(              colorScheme: const ColorScheme.dark(                primary: white,                onPrimary: white,                surface: text_light,                onSurface: black,              ),              dialogBackgroundColor: white,            ),            child: child!,          );        });    if (pickedS != null && pickedS != TimeOfDay ) {      setState(() {        selectedTime = ("${pickedS.hour}:${pickedS.minute} ${pickedS.period.name}").toString();      });    }  }  _savePrayerRequest() async {    setState(() {      _isLoading = true;    });    Navigator.pop(context);    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(MAIN_URL + savePrayerRequest);    Map<String, String> jsonBody = {      'user_id' : sessionManager.getUserId().toString(),      'name' : prayerFNameController.value.text,      'surname' : prayerLNameController.value.text,      'date_of_birth' : universalDateConverter("MMMM dd, yyyy", "dd-MM-yyyy", prayerDOBController.value.text),      'email' : prayerEmailController.value.text,      'prayer_id' : prayerID,      'notes' : prayerNotesController.value.text,    };    final response = await http.post(url, body: jsonBody);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = CommonResponseModel.fromJson(user);    if (statusCode == 200 && dataResponse.success == 1) {      _showAlertDialog("assets/images/ic_prayer_only.png", "Your request\nfor prayer request is received,\nwill contact you shortly.");      setState(() {        _isLoading = false;      });    } else {      setState(() {        _isLoading = false;      });      showToast(dataResponse.message, context);    }  }  void _openRashiCalculatorDialog(){    rashiEmailController.text = sessionManager.getEmail() ?? "";    rashiDOBController.text = universalDateConverter( "yyyy-MM-dd","MMMM dd, yyyy", sessionManager.getDob() ?? "");    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context){          return Padding(            padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),            child: StatefulBuilder(                builder: (context,setState){                  return Container(                    height: MediaQuery.of(context).size.height * 0.84,                      decoration: const BoxDecoration(                        color:bottomSheetBg,                        borderRadius: BorderRadius.only(                          topLeft: Radius.circular(22.0),                          topRight: Radius.circular(22.0),                        ),                      ),                      child: SingleChildScrollView(                        scrollDirection: Axis.vertical,                        child: Padding(                          padding: const EdgeInsets.only(right:14,left:14),                          child: Column(                            children: [                              Container(                                  width: 50,                                  margin: const EdgeInsets.only(top: 12,right: 14,left:14),                                  child: const Divider(                                    height: 2,                                    thickness: 2,                                    color: bottomSheetline,                                  )                              ),                              Container(                                margin: const EdgeInsets.only(top: 20, bottom: 16),                                child: const Text(                                  "Rashi Calculator",                                  style: TextStyle(                                      fontWeight: FontWeight.w900, color: darkbrown, fontSize: 18),                                ),                              ),                              Container(                                  margin: const EdgeInsets.only(top: 14),                                  child: TextField(                                    onTap: (){                                    },                                    controller: rashiMothersNameController,                                    keyboardType: TextInputType.text,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: "Mother's Name",                                      labelStyle: const TextStyle(color: text_new),                                     ),                                  )                              ),                              /* Container(                                margin: const EdgeInsets.only(top: 10),                                alignment: Alignment.center,                                decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(16.0),                                    color: white_blue),                                child: Padding(                                  padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                  child: TextField(                                    controller: rashiMothersNameController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                    decoration: const InputDecoration(                                        fillColor: white_blue,                                        counterText: "",                                        border: InputBorder.none,                                        hintText: "Mother's Name",                                        hintStyle: TextStyle(                                            color: text_dark,                                            fontSize: 14,                                            fontWeight: FontWeight.w900)),                                  ),                                ),                              ), */                              Container(                                  margin: const EdgeInsets.only(top: 16),                                  child: TextField(                                    onTap: (){                                    },                                    controller: rashiFathersNameController,                                    keyboardType: TextInputType.text,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: "Father's Name",                                      labelStyle: const TextStyle(color: text_new),                                     ),                                  )                              ),                              /* Container(                                margin: const EdgeInsets.only(top: 10),                                alignment: Alignment.center,                                decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(16.0),                                    color: white_blue),                                child: Padding(                                  padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                  child: TextField(                                    controller: rashiFathersNameController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                    decoration: const InputDecoration(                                        fillColor: white_blue,                                        counterText: "",                                        border: InputBorder.none,                                        hintText: "Father's Name",                                        hintStyle: TextStyle(                                            color: text_dark,                                            fontSize: 14,                                            fontWeight: FontWeight.w900)),                                  ),                                ),                              ),*/                              Container(                                  margin: const EdgeInsets.only(top: 16),                                  child: TextField(                                    onTap: (){                                    },                                    controller: rashiEmailController,                                    keyboardType: TextInputType.emailAddress,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: "Email",                                      labelStyle: const TextStyle(color: text_new),                                    ),                                  )                              ),                             /*  Container(                                margin: const EdgeInsets.only(top: 10),                                alignment: Alignment.center,                                decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(16.0),                                    color: white_blue),                                child: Padding(                                  padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                  child: TextField(                                    controller: rashiEmailController,                                    keyboardType: TextInputType.emailAddress,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                    decoration: const InputDecoration(                                        fillColor: white_blue,                                        counterText: "",                                        border: InputBorder.none,                                        hintText: "Email",                                        hintStyle: TextStyle(                                            color: text_dark,                                            fontSize: 14,                                            fontWeight: FontWeight.w900)),                                  ),                                ),                              ), */                              Container(                                  margin: const EdgeInsets.only(top: 16),                                  child: TextField(                                    readOnly: true,                                    onTap: () async {                                      _setDatePicker(rashiDOBController);                                    },                                    controller: rashiDOBController,                                    keyboardType: TextInputType.text,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: "Date of Birth",                                      labelStyle: const TextStyle(color: text_new),                                    ),                                  )                              ),                            /*  Container(                                margin: const EdgeInsets.only(top: 10),                                alignment: Alignment.center,                                decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(16.0),                                    color: white_blue),                                child: Padding(                                  padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                  child: TextField(                                    controller: rashiDOBController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    readOnly: true,                                    onTap: () async {                                      _setDatePicker(rashiDOBController);                                    },                                    style: const TextStyle(                                        color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                    decoration: const InputDecoration(                                        fillColor: white_blue,                                        counterText: "",                                        border: InputBorder.none,                                        hintText: "Date of Birth",                                        hintStyle: TextStyle(                                            color: text_dark,                                            fontSize: 14,                                            fontWeight: FontWeight.w900)),                                  ),                                ),                              ), */                              Container(                                  margin: const EdgeInsets.only(top: 16),                                  child: TextField(                                    readOnly: true,                                    onTap: () async {                                      _setTimePicker(rashiTOBController,setState);                                    },                                    controller: rashiTOBController,                                    keyboardType: TextInputType.text,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: "Time of Birth",                                      labelStyle: const TextStyle(color: text_new),                                    ),                                  )                              ),                            /*  Container(                                margin: const EdgeInsets.only(top: 10),                                alignment: Alignment.center,                                decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(16.0),                                    color: white_blue),                                child: Padding(                                  padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                  child: TextField(                                    controller: rashiTOBController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    readOnly: true,                                    onTap: () async {                                      _setTimePicker(rashiTOBController);                                    },                                    style: const TextStyle(                                        color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                    decoration: const InputDecoration(                                        fillColor: white_blue,                                        counterText: "",                                        border: InputBorder.none,                                        hintText:  "Time of Birth",                                        hintStyle: TextStyle(                                            color: text_dark,                                            fontSize: 14,                                            fontWeight: FontWeight.w900)),                                  ),                                ),                              ), */                              Container(                                  margin: const EdgeInsets.only(top: 16),                                  child: TextField(                                    readOnly: true,                                    onTap: () async {                                      placesDialog(rashiPOBController,setState);                                    },                                    controller: rashiPOBController,                                    keyboardType: TextInputType.text,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: "Place of Birth",                                      labelStyle: const TextStyle(color: text_new),                                    ),                                  )                              ),                             /* Container(                                margin: const EdgeInsets.only(top: 10),                                alignment: Alignment.center,                                decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(16.0),                                    color: white_blue),                                child: Padding(                                  padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                  child: TextField(                                    controller: rashiPOBController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    readOnly: true,                                    onTap: () async {                                      placesDialog(rashiPOBController,setState);                                    },                                    style: const TextStyle(                                        color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                    decoration: const InputDecoration(                                        fillColor: white_blue,                                        counterText: "",                                        border: InputBorder.none,                                        hintText: "Place of Birth",                                        hintStyle: TextStyle(                                            color: text_dark,                                            fontSize: 14,                                            fontWeight: FontWeight.w900)),                                  ),                                ),                              ),*/                              Container(                                  margin: const EdgeInsets.only(top: 16),                                  child: TextField(                                    minLines: 4,                                    maxLines: 4,                                    controller: rashiNotesController,                                    keyboardType: TextInputType.text,                                    cursorColor: Colors.grey,                                    decoration: InputDecoration(                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(20),                                          borderSide: const BorderSide(color: Colors.grey)                                      ),                                      focusedBorder: OutlineInputBorder(                                        borderRadius: BorderRadius.circular(20),                                        borderSide: const BorderSide(color: Colors.grey,),                                      ),                                      labelText: "Leave Your Detail",                                      labelStyle: const TextStyle(color: text_new),                                    ),                                  )                              ),                             /* Container(                                margin: const EdgeInsets.only(top: 10),                                alignment: Alignment.center,                                decoration: BoxDecoration(                                    borderRadius: BorderRadius.circular(16.0),                                    color: white_blue),                                child: Padding(                                  padding: const EdgeInsets.only(left: 14,right: 10,top: 4,bottom: 4),                                  child: TextField(                                    minLines: 4,                                    maxLines: 4,                                    controller: rashiNotesController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: text_dark, fontSize: 14, fontWeight: FontWeight.w600),                                    decoration: const InputDecoration(                                        fillColor: white_blue,                                        counterText: "",                                        border: InputBorder.none,                                        hintText: "Leave Your Detail",                                        hintStyle: TextStyle(                                            color: text_dark,                                            fontSize: 14,                                            fontWeight: FontWeight.w900)),                                  ),                                ),                              ), */                              Container(                                  alignment: Alignment.topLeft,                                  margin: const EdgeInsets.only(top:16,bottom:6),                                  child: const Text("Gender",style: TextStyle(fontWeight: FontWeight.w400,color: brown,fontSize: 16),)),                              Row(                                children: [                                  GestureDetector(                                    onTap: () {                                      setState(() {                                        isGirl = false;                                        isBoy = true;                                      });                                    },                                    child: Row(                                      children: [                                        Container(                                            margin: const EdgeInsets.only(top: 4, right: 5,bottom: 8),                                            child: isBoy ?                                            const Image(image: AssetImage("assets/images/ic_radio_selected.png"), width: 20, height: 20, color: title) :                                            const Image(image: AssetImage("assets/images/ic_radio_unselected.png"),  width: 20, height: 20, color:title,)                                        ),                                        Container(                                          margin: const EdgeInsets.only(left: 4),                                          alignment: Alignment.centerLeft,                                          child: const Text("Boy", style: TextStyle(fontSize: 15,fontWeight: FontWeight.w500, color: black),),                                        ),                                      ],                                    ),                                  ),                                  GestureDetector(                                    onTap: () {                                      setState(() {                                        isGirl = true;                                        isBoy = false;                                      });                                    },                                    child: Row(                                      children: [                                        Container(                                            margin: const EdgeInsets.only(top: 4, right: 5,bottom: 8,left:10),                                            child: isGirl ?                                            const Image(image: AssetImage("assets/images/ic_radio_selected.png"), width: 20, height: 20, color: title) :                                            const Image(image: AssetImage("assets/images/ic_radio_unselected.png"), width: 20, height: 20, color: title)                                        ),                                        Container(                                          margin: const EdgeInsets.only(left: 4),                                          alignment: Alignment.centerLeft,                                          child: const Text("Girl", style: TextStyle(fontSize: 15,fontWeight: FontWeight.w500, color: black),),                                        ),                                      ],                                    ),                                  )                                ],                              ),                              Container(height: 22,),                              TextButton(                                onPressed: (){                                  if(rashiMothersNameController.text.isEmpty)                                  {                                    showToast('Please enter mother name', context);                                  }                                  else if(rashiFathersNameController.text.isEmpty)                                  {                                    showToast("Please enter father name", context);                                  }                                  else if(rashiEmailController.text.isEmpty)                                  {                                    showToast("Please enter email", context);                                  }                                  else if(rashiDOBController.text.isEmpty)                                  {                                    showToast("Please enter birth date ", context);                                  }                                  else if(rashiPOBController.text.isEmpty)                                  {                                    showToast("Please enter a place of birth", context);                                  }                                  else if(rashiTOBController.text.isEmpty)                                  {                                    showToast("Please enter your birth time", context);                                  }                                  else                                  {                                    reviewRashiDialog();                                  }                                },                                style: ButtonStyle(                                  shape: MaterialStateProperty.all<RoundedRectangleBorder>(                                    RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0), side: const BorderSide(color: light_yellow, width: 0.5)),                                  ),                                  backgroundColor: MaterialStateProperty.all<Color>(light_yellow),                                ),                                child: Padding(                                  padding: const EdgeInsets.all(4.0),                                  child: Row(                                    mainAxisAlignment: MainAxisAlignment.center,                                    crossAxisAlignment: CrossAxisAlignment.center,                                    children: const [                                      Text('Review Request', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w400, color: title),),                                    ],                                  ),                                ),                              ),                              Container(height: 22,),                           /*   Padding(                                padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),                                child: Container(                                  alignment: Alignment.bottomRight,                                  child: InkWell(                                    onTap: (){                                      if(rashiMothersNameController.text.isEmpty)                                      {                                        showToast('Please enter mother name', context);                                      }                                      else if(rashiFathersNameController.text.isEmpty)                                      {                                        showToast("Please enter father name", context);                                      }                                      else if(rashiEmailController.text.isEmpty)                                      {                                        showToast("Please enter email", context);                                      }                                      else if(rashiDOBController.text.isEmpty)                                      {                                        showToast("Please enter birth date ", context);                                      }                                      else if(rashiPOBController.text.isEmpty)                                      {                                        showToast("Please enter a place of birth", context);                                      }                                      else if(rashiTOBController.text.isEmpty)                                      {                                        showToast("Please enter your birth time", context);                                      }                                      else                                      {                                        reviewRashiDialog();                                      }                                    },                                    child: Container(                                      margin: const EdgeInsets.only(bottom: 20),                                      child: Card(                                        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20.0),                                        ),                                        color: light_yellow,                                        elevation: 10,                                        child: const Padding(                                          padding: EdgeInsets.all(14.0,),                                          child: Text("Review Request",                                            style: TextStyle(                                                fontSize: 14,                                                color: title,                                                fontWeight: FontWeight.bold),textAlign: TextAlign.center,),                                        ),                                      ),                                    ),                                  ),                                ),                              ) */                            ],                          ),                        ),                      ),                  );                }),          );        }) ;  }  void reviewRashiDialog() {    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context) {          return StatefulBuilder(builder: (context, setState) {            return  Container(                decoration: const BoxDecoration(                    color: white,                    borderRadius: BorderRadius.only(                      topLeft: Radius.circular(12.0),                      topRight: Radius.circular(12.0),                    )                ),                child: Wrap(                  children: [                    Row(                      mainAxisAlignment: MainAxisAlignment.center,                      crossAxisAlignment: CrossAxisAlignment.center,                      children: [                        Container(                            width: 50,                            alignment: Alignment.center,                            margin: const EdgeInsets.only(top: 12),                            child: const Divider(                              height: 1.5,                              thickness: 1.5,                              color: Colors.grey,                            )                        ),                      ],                    ),                    Container(                      margin: const EdgeInsets.only(top: 20),                      alignment: Alignment.center,                      child: const Text(                        "Confirm Rashi Calculator",                        style: TextStyle(                            fontWeight: FontWeight.bold,                            color: title,                            fontSize: 18),                      ),                    ),                    SingleChildScrollView(                      child: Container(                        width: MediaQuery.of(context).size.width,                        margin: const EdgeInsets.only(left: 14, right: 14, top: 6, bottom: 10),                        padding: const EdgeInsets.all(10),                        decoration: BoxDecoration(borderRadius: BorderRadius.circular(6), color:sky_blue),                        child: Column(                          mainAxisAlignment: MainAxisAlignment.start,                          crossAxisAlignment: CrossAxisAlignment.start,                          children: [                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Mother Name",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light                                      ),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      rashiMothersNameController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14                                      )                                  ),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Father Name",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light                                      ),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      rashiFathersNameController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)                                  ),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Date of Birth",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light                                      ),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      rashiDOBController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)                                  ),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Email",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      rashiEmailController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14                                      )                                  ),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Time of Birth",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      rashiTOBController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)                                  ),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Place of Birth",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      rashiPOBController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Gender of Baby",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      isBoy ? "Boy" : "Girl" ,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Visibility(                              visible:  rashiNotesController.value.text.isNotEmpty,                              child: Column(                                children: [                                  const Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Notes",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                  Padding(                                    padding: const EdgeInsets.all(12),                                    child: Text(                                        rashiNotesController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                            ),                          ],                        ),                      ),                    ),                    Padding(                      padding: const EdgeInsets.all(14.0),                      child: Row(                        mainAxisAlignment: MainAxisAlignment.end,                        crossAxisAlignment: CrossAxisAlignment.end,                        children: [                          GestureDetector(                            onTap: (){                              Navigator.pop(context);                            },                            child: Card(                              shape: RoundedRectangleBorder(                                borderRadius: BorderRadius.circular(20.0),                              ),                              color: light_yellow,                              elevation: 10,                              child: const Padding(                                padding: EdgeInsets.all(14.0),                                child: Text(                                  "Edit Request",                                  style: TextStyle(                                      fontSize: 14,                                      color: title,                                      fontWeight: FontWeight.bold),                                  textAlign: TextAlign.center,                                ),                              ),                            ),                          ),                          Container(width: 8,),                          GestureDetector(                            onTap: (){                              /*Navigator.pop(context);                              saveRashiRequestApi();*/                              saveRashiRequestApi("");                              Navigator.pop(context);                              /*Navigator.of(context).push(                                MaterialPageRoute(                                  builder: (BuildContext context) => UsePaypal(                                      sandboxMode: true,                                      clientId: PAYPAL_CLIENT_ID,                                      secretKey:PAYPAL_CLIENT_SECRET,                                      returnURL: "https://panditbookings.com/return",                                      cancelURL: "http://panditbookings.com/cancel",                                      transactions: [                                        {                                          "amount": {                                            "total": rashiPrice,                                            "currency": "USD",                                            "details": const {                                              "subtotal": '1',                                              "shipping": '0',                                              "shipping_discount": 0                                            }                                          },                                          "description":                                          "The payment transaction description.",                                          // "payment_options": {                                          //   "allowed_payment_method":                                          //       "INSTANT_FUNDING_SOURCE"                                          // },                                          "item_list": {                                            "items": const [                                              {                                                "name": "Rashi Request",                                                "quantity": 1,                                                "price": '1',                                                "currency": "USD"                                              }                                            ],                                            // shipping address is not required though                                            "shipping_address": {                                              "recipient_name": "${sessionManager.getName()} ${sessionManager.getLastName()}",                                              "line1": "2 Gila Crescent",                                              "line2": "",                                              "city": "Johannesburg",                                              "country_code": "SA",                                              "postal_code": "2090",                                              "phone": "+00000000",                                              "state": 'Gauteng'                                            },                                          }                                        }                                      ],                                      note: "Contact us for any questions on your order.",                                      onSuccess: (Map params) async {                                        print("onSuccess: $params");                                        print(params['paymentId']);                                        String paymentId = "";                                        paymentId = params['paymentId'];                                        saveRashiRequestApi(paymentId);                                      },                                      onError: (error) {                                        print("onError: $error");                                      },                                      onCancel: (params) {                                        print('cancelled: $params');                                      }                                      ),                                ),                              );*/                            },                            child: Card(                              shape: RoundedRectangleBorder(                                borderRadius: BorderRadius.circular(20.0),                              ),                              color: light_yellow,                              elevation: 10,                              child: const Padding(                                padding: EdgeInsets.all(14.0),                                child: Text(                                  "Submit Request",                                  style: TextStyle(                                      fontSize: 14,                                      color: title,                                      fontWeight: FontWeight.bold),                                  textAlign: TextAlign.center,                                ),                              ),                            ),                          ),                        ],                        ),                    )                  ],                ));          }          );        }        );  }  void saveRashiRequestApi(String paymentId) async {    setState(() {      _isLoading = true;    });    Navigator.pop(context);    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(MAIN_URL + saveRashiRequest);    /*@Field("mother_name") mother_name:String,    @Field("father_name") father_name:String,    @Field("date_of_birth") date_of_birth:String,    @Field("time_of_birth") time_of_birth:String,    @Field("place_of_birth") place_of_birth:String,    @Field("user_id") user_id:String,    @Field("country") country:String,    @Field("state") state:String,    @Field("city") city:String,    @Field("child_gender") child_gender:Int,    @Field("email") email:String,    @Field("notes") note:String,*/    Map<String, dynamic> jsonBody = {      'mother_name' : rashiMothersNameController.value.text,      'father_name' : rashiFathersNameController.value.text,      'date_of_birth' : universalDateConverter("MMMM dd, yyyy", "dd-MM-yyyy", rashiDOBController.value.text),      'time_of_birth' : rashiTOBController.value.text,      'place_of_birth' : rashiPOBController.value.text,      'user_id' : sessionManager.getUserId().toString(),      'child_gender' : isBoy ? "0" : "1" ,      'email' : rashiEmailController.value.text,      'notes' : rashiNotesController.value.text,      'payment_id' : paymentId    };    final response = await http.post(url, body: jsonBody);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = CommonResponseModel.fromJson(user);    if (statusCode == 200 && dataResponse.success == 1) {      _showAlertDialog("assets/images/ic_rashi_only.png","Your request\nfor rashi is received,\nwill contact you shortly.");      setState(() {        _isLoading = false;      });    } else {      setState(() {        _isLoading = false;      });      showToast(dataResponse.message, context);    }  }  void _confirmMatchMaking() {    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context) {          return StatefulBuilder(builder: (context, setState) {            return  Container(                height: MediaQuery.of(context).size.height * 0.88,                decoration: const BoxDecoration(                    color: white,                    borderRadius: BorderRadius.only(                      topLeft: Radius.circular(12.0),                      topRight: Radius.circular(12.0),                    )),                child: Column(                  children: [                    Container(                        width: 50,                        margin: const EdgeInsets.only(top: 12),                        child: const Divider(                          height: 1.5,                          thickness: 1.5,                          color: Colors.grey,                        )                    ),                    Container(                      margin: const EdgeInsets.only(top: 20),                      child: const Text(                        "Confirm Match Making",                        style: TextStyle(                            fontWeight: FontWeight.bold,                            color: title,                            fontSize: 18),                      ),                    ),                    Expanded(                      child: SingleChildScrollView(                        child: Container(                          width: MediaQuery.of(context).size.width,                          margin: const EdgeInsets.only(left: 14, right: 14, top: 6, bottom: 10),                          padding: const EdgeInsets.all(10),                          decoration: BoxDecoration(borderRadius: BorderRadius.circular(6), color:sky_blue),                          child: Column(                            mainAxisAlignment: MainAxisAlignment.start,                            crossAxisAlignment: CrossAxisAlignment.start,                            children: [                              Container(                                  alignment: Alignment.topLeft,                                  margin: const EdgeInsets.only(left: 10, right: 10, top: 6, bottom: 10),                                  child: const Text("Yajman's Details",style: TextStyle(fontSize: 18,fontWeight:FontWeight.bold,color: title),)                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "First Name",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light                                        ),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchFnameController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)                                    ),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Last Name",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light                                        ),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchLnameController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)                                    ),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Email",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchEmailcontroller.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)                                    ),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Mobile Number",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        "$countryCode ${matchNumberController.value.text}",                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14                                        )                                    ),                                  )                                ],                              ),                              Container(                                  alignment: Alignment.topLeft,                                  margin: const EdgeInsets.only(left: 10, right: 10, top: 6, bottom: 10),                                  child: const Text("Girls's Details",style: TextStyle(fontSize: 18,fontWeight:FontWeight.bold,color: title),)                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "First Name",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchGirlFnameController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14                                        )                                    ),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Last Name",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchGirlLNameController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)                                    ),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Birth date",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchGirlBirthDateController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14                                        )                                    ),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Birth time",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchGirlBirthTimeController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Birth Place",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchGirlBirthPlaceController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                              Container(                                  alignment: Alignment.topLeft,                                  margin: const EdgeInsets.only(left: 10, right: 10, top: 6, bottom: 10),                                  child: const Text("Boy's Details",style: TextStyle(fontSize: 18,fontWeight:FontWeight.bold,color: title),)),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "First Name",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchBoyFNameController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Last Name",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchBoyLNameController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Birth date",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchBoyBirthDateController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Birth time",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchBoyBirthTimeController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                              Row(                                children: [                                  const Expanded(                                    child: Padding(                                      padding: EdgeInsets.all(12),                                      child: Text(                                        "Birth Place",                                        style: TextStyle(                                            fontSize: 14,                                            fontWeight: FontWeight.w700,                                            color: text_light),                                      ),                                    ),                                  ),                                  Expanded(                                    child: Text(                                        matchBoyBirthPlaceController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              ),                              Visibility(                                visible: matchNoteController.value.text.isNotEmpty,                                  child: Column(                                children: [                                  const Padding(                                    padding: EdgeInsets.all(8),                                    child: Text(                                      "Notes",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                  Padding(                                    padding: const EdgeInsets.all(8.0),                                    child: Text(                                        matchNoteController.value.text,                                        style: const TextStyle(                                            fontWeight: FontWeight.w700,                                            color: title,                                            fontSize: 14)),                                  )                                ],                              )),                            ],                          ),                        ),                      ),                    ),                    Row(                      children: [                      Flexible(                        child:GestureDetector(                          onTap: (){                           Navigator.pop(context);                          },                          child: Container(                            alignment: Alignment.bottomRight,                            margin: const EdgeInsets.only(top: 20,bottom: 20,left: 20),                            child: Card(                              shape: RoundedRectangleBorder(                                borderRadius: BorderRadius.circular(20.0),                              ),                              color: light_yellow,                              elevation: 10,                              child: const Padding(                                padding: EdgeInsets.all(14.0),                                child: Text("Edit Request",                                  style: TextStyle(                                      fontSize: 14,                                      color: title,                                      fontWeight: FontWeight.bold),                                  textAlign: TextAlign.center,),                              ),                            ),                          ),                        ),                      ),                      Container(                        alignment: Alignment.bottomRight,                        margin: const EdgeInsets.only(top: 20,bottom: 20,right: 10),                        child: GestureDetector(                          onTap: (){                            _callsaveMatchdataAPI("");                            Navigator.pop(context);                           /* Navigator.of(context).push(                              MaterialPageRoute(                                builder: (BuildContext context) => UsePaypal(                                    sandboxMode: true,                                    clientId: PAYPAL_CLIENT_ID,                                    secretKey:PAYPAL_CLIENT_SECRET,                                    returnURL: "https://panditbookings.com/return",                                    cancelURL: "http://panditbookings.com/cancel",                                    transactions: [                                      {                                        "amount": {                                          "total": matchMakingPrice,                                          "currency": "USD",                                          "details": const {                                            "subtotal": '1',                                            "shipping": '0',                                            "shipping_discount": 0                                          }                                        },                                        "description":                                        "The payment transaction description.",                                        // "payment_options": {                                        //   "allowed_payment_method":                                        //       "INSTANT_FUNDING_SOURCE"                                        // },                                        "item_list": {                                          "items": const [                                            {                                              "name": "Match Making Request",                                              "quantity": 1,                                              "price": '1',                                              "currency": "USD"                                            }                                          ],                                          // shipping address is not required though                                          "shipping_address": {                                            "recipient_name": "${sessionManager.getName()} ${sessionManager.getLastName()}",                                            "line1": "2 Gila Crescent",                                            "line2": "",                                            "city": "Johannesburg",                                            "country_code": "SA",                                            "postal_code": "2090",                                            "phone": "+00000000",                                            "state": 'Gauteng'                                          },                                        }                                      }                                    ],                                    note: "Contact us for any questions on your order.",                                    onSuccess: (Map params) async {                                      print("onSuccess: $params");                                      String paymentId = "";                                      paymentId = params['paymentId'];                                      _callsaveMatchdataAPI(paymentId);                                    },                                    onError: (error) {                                      print("onError: $error");                                    },                                    onCancel: (params) {                                      print('cancelled: $params');                                    }                                ),                              ),                            );                              */                          },                          child: Card(                            shape: RoundedRectangleBorder(                              borderRadius: BorderRadius.circular(20.0),                            ),                            color: light_yellow,                            elevation: 10,                            child: const Padding(                              padding: EdgeInsets.all(14.0),                              child: Text(                                "Submit Request",                                style: TextStyle(                                    fontSize: 14,                                    color: title,                                    fontWeight: FontWeight.bold),                                textAlign: TextAlign.center,                              ),                            ),                          ),                        ),                      ),                    ],                    )                  ],                ));          });        });  }  _callsaveMatchdataAPI(String paymentId) async {    setState(() {      _isLoading = true;    });    Navigator.pop(context);    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(MAIN_URL + matchmakingsave);    Map<String, String> jsonBody = {    "user_id": sessionManager.getUserId().toString(),    "bride_name": matchGirlLNameController.value.text,    "bride_surname": matchGirlLNameController.value.text,    "bride_birth_date": universalDateConverter("MMMM dd, yyyy","dd-MM-yyyy", matchGirlBirthDateController.value.text),    "bride_birth_time": matchGirlBirthTimeController.value.text,    "bride_address": matchGirlBirthPlaceController.value.text,    "groom_name": matchBoyFNameController.value.text,    "groom_surname": matchBoyLNameController.value.text,    "groom_birth_date": universalDateConverter("MMMM dd, yyyy","dd-MM-yyyy", matchBoyBirthDateController.value.text),    "groom_birth_time": matchBoyBirthTimeController.value.text,    "groom_address": matchBoyBirthPlaceController.value.text,    "comments": matchNoteController.value.text,    "first_name": matchFnameController.value.text,    "last_name": matchLnameController.value.text,    "email": matchEmailcontroller.value.text,    "mobile": matchNumberController.value.text,    "match_id": "",      'payment_id' :paymentId    };    final response = await http.post(url, body: jsonBody);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = CommonResponseModel.fromJson(user);    if (statusCode == 200 && dataResponse.success == 1)    {      _showAlertDialog("assets/images/ic_match_only.png","Your request\nfor match making is received,\nwill contact you shortly.");    setState(()    {    _isLoading = false;    });    } else    {    setState(()    {    _isLoading = false;    });    showToast(dataResponse.message, context);    }  }  void _showAstroCheck() {    astroFnameController.text = sessionManager.getName() ?? "";    astroLnameController.text = sessionManager.getLastName() ?? "";    astroEmailController.text = sessionManager.getEmail() ?? "";    astroMobileNumberController.text = sessionManager.getPhone() ?? "";    astroGirlBirthDateController.text =universalDateConverter( "yyyy-MM-dd","MMMM dd, yyyy", sessionManager.getDob() ?? "");    showModalBottomSheet(      context: context,      isScrollControlled: true,      backgroundColor: Colors.transparent,      builder: (context) {        return Padding(          padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),          child: StatefulBuilder(builder:(context,setState)          {            return Container(                height: MediaQuery.of(context).size.height * 0.82,                decoration: const BoxDecoration(                    color: bottomSheetBg,                    borderRadius: BorderRadius.only(                      topLeft: Radius.circular(22.0),                      topRight: Radius.circular(22.0),                    )),                child:Column(                  children: [                    Container(                        width: 50,                        margin: const EdgeInsets.only(top: 12),                        child: const Divider(                          height: 2,                          thickness: 2,                          color: bottomSheetline,                        )),                    Container(                      margin: const EdgeInsets.only(top: 20),                      child: const Text(                        "Astrology",                        style: TextStyle(                            fontWeight: FontWeight.w900, color: darkbrown, fontSize: 18),                      ),                    ),                    Expanded(                      child: SingleChildScrollView(                          child:Container(                            margin: const EdgeInsets.only(left: 14,right:14,),                            child: Column(                                children:[                                  Container(                                      alignment: Alignment.topLeft,                                      margin: const EdgeInsets.only(top:14,bottom: 14),                                      child: const Text("Basic Details",style: TextStyle(fontSize: 16,fontWeight: FontWeight.w500,color:brown),)                                  ),                                  Container(                                      margin: const EdgeInsets.only(top: 14),                                      child: TextField(                                        controller: astroFnameController,                                        keyboardType: TextInputType.text,                                        cursorColor: Colors.grey,                                        decoration: InputDecoration(                                          border: OutlineInputBorder(                                              borderRadius: BorderRadius.circular(20),                                              borderSide: const BorderSide(color: Colors.grey)                                          ),                                          focusedBorder: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey,),                                          ),                                          labelText: "First Name",                                          labelStyle: const TextStyle(color: text_new),                                     ),                                      )                                  ),                                 /* TextField(                                    controller: astroFnameController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: title,                                        fontSize: 14,                                        fontWeight: FontWeight.w600),                                    decoration: InputDecoration(                                      fillColor: white_blue,                                      counterText: "",                                      contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(14.0),                                          borderSide: const BorderSide(                                              width: 0, style: BorderStyle.none)),                                      filled: true,                                      hintText: "First Name",                                      hintStyle: const TextStyle(                                        color: text_dark,                                        fontSize: 14,                                        fontWeight: FontWeight.w900,                                      ),                                    ),                                  ), */                                  Container(                                      margin: const EdgeInsets.only(top: 14),                                      child: TextField(                                        onTap: (){                                        },                                        controller: astroLnameController,                                        keyboardType: TextInputType.text,                                        cursorColor: Colors.grey,                                        decoration: InputDecoration(                                          border: OutlineInputBorder(                                              borderRadius: BorderRadius.circular(20),                                              borderSide: const BorderSide(color: Colors.grey)                                          ),                                          focusedBorder: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey,),                                          ),                                          labelText: "Last Name",                                          labelStyle: const TextStyle(color: text_new),                                     ),                                      )                                  ),                                /*  TextField(                                    controller: astroLnameController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: title,                                        fontSize: 14,                                        fontWeight: FontWeight.w600),                                    decoration: InputDecoration(                                      fillColor: white_blue,                                      counterText: "",                                      contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(10.0),                                          borderSide: const BorderSide(                                              width: 0, style: BorderStyle.none)),                                      filled: true,                                      hintText: "Last Name",                                      hintStyle: const TextStyle(                                        color: text_dark,                                        fontSize: 14,                                        fontWeight: FontWeight.w900,                                      ),                                    ),                                  ), */                                  Container(                                      margin: const EdgeInsets.only(top: 14),                                      child: TextField(                                        onTap: (){                                        },                                        controller: astroEmailController,                                        keyboardType: TextInputType.text,                                        cursorColor: Colors.grey,                                        decoration: InputDecoration(                                          border: OutlineInputBorder(                                              borderRadius: BorderRadius.circular(20),                                              borderSide: const BorderSide(color: Colors.grey)                                          ),                                          focusedBorder: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey,),                                          ),                                          labelText: "Email",                                          labelStyle: const TextStyle(color: text_new),                                     ),                                      )                                  ),                                  /* TextField(                                    controller: astroEmailController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: title,                                        fontSize: 14,                                        fontWeight: FontWeight.w600),                                    decoration: InputDecoration(                                      fillColor: white_blue,                                      counterText: "",                                      contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(10.0),                                          borderSide: const BorderSide(                                              width: 0, style: BorderStyle.none)),                                      filled: true,                                      hintText: "Email",                                      hintStyle: const TextStyle(                                        color: text_dark,                                        fontSize: 14,                                        fontWeight: FontWeight.w900,                                      ),                                    ),                                  ), */                                  Container(                                    margin: const EdgeInsets.only(top: 10),                                    alignment: Alignment.center,                                    padding: const EdgeInsets.only(left: 14, right: 10),                                    decoration: BoxDecoration(                                      border: Border.all(                                        color: Colors.grey,                                        width: 1,                                      ),                                      borderRadius: const BorderRadius.all(                                        Radius.circular(18),                                      ),                                    ),                                    child: Row(                                      children: [                                        GestureDetector(                                          child:  Text(countryCode,                                              style: const TextStyle(                                                  color: text_dark,                                                  fontWeight: FontWeight.w600,                                                  fontSize: 14)),                                          onTap: (){                                            countryDialog(setState);                                          },                                        ),                                        Container(                                          margin: const EdgeInsets.only(left: 10),                                          height: 20,                                          width: 1,                                          color: text_light,                                        ),                                        Flexible(                                          child:TextField(                                            controller: astroMobileNumberController,                                            maxLength: 12,                                            keyboardType: TextInputType.number,                                            cursorColor: text_dark,                                            style: const TextStyle(                                                color: title,                                                fontSize: 14,                                                fontWeight: FontWeight.w500),                                            decoration: InputDecoration(                                              contentPadding: const EdgeInsets.only(left:15,top:20,bottom:20),                                              fillColor: bottomSheetBg,                                              counterText: "",                                              border: OutlineInputBorder(                                                  borderRadius: BorderRadius.circular(14.0),                                                  borderSide: const BorderSide(                                                      width: 0, style: BorderStyle.none)),                                              filled: true,                                              hintText: "Mobile Number",                                              hintStyle: const TextStyle(                                                color: text_dark,                                                fontSize: 14,                                                fontWeight: FontWeight.w900,                                              ),                                            ),                                          ),                                        )                                      ],                                    ),                                  ),                                /*  Container(                                    alignment: Alignment.center,                                    padding: const EdgeInsets.only(left: 14, right: 10),                                    decoration: const BoxDecoration(                                      color: white_blue,                                      borderRadius: BorderRadius.all(                                        Radius.circular(10),                                      ),                                    ),                                    child: Row(                                      children: [                                        InkWell(                                          child: Text(countryCode,                                              style: const TextStyle(                                                  color: text_dark,                                                  fontWeight: FontWeight.w600,                                                  fontSize: 14)                                          ),                                          onTap: (){                                            countryDialog(setState);                                          },                                        ),                                        Container(                                          margin: const EdgeInsets.only(left: 10),                                          height: 20,                                          width: 1,                                          color: text_light,                                        ),                                        Flexible(                                          child: TextField(                                            controller: astroMobileNumberController,                                            maxLength: 10,                                            keyboardType: TextInputType.number,                                            cursorColor: text_dark,                                            style: const TextStyle(                                                color: title,                                                fontSize: 14,                                                fontWeight: FontWeight.w600),                                            decoration: InputDecoration(                                              fillColor: white_blue,                                              counterText: "",                                              contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                              border: OutlineInputBorder(                                                  borderRadius: BorderRadius.circular(10.0),                                                  borderSide: const BorderSide(                                                      width: 0, style: BorderStyle.none)),                                              filled: true,                                              hintText: "Mobile Number",                                              hintStyle: const TextStyle(                                                color: text_dark,                                                fontSize: 14,                                                fontWeight: FontWeight.w900,                                              ),                                            ),                                          ),                                        )                                      ],                                    ),                                  ), */                                  Container(                                      margin: const EdgeInsets.only(top: 14),                                      child: TextField(                                        onTap: () async {                                          _setDatePicker(astroGirlBirthDateController);                                        },                                        readOnly: true,                                        controller: astroGirlBirthDateController,                                        keyboardType: TextInputType.text,                                        cursorColor: Colors.grey,                                        decoration: InputDecoration(                                          border: OutlineInputBorder(                                              borderRadius: BorderRadius.circular(20),                                              borderSide: const BorderSide(color: Colors.grey)                                          ),                                          focusedBorder: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey,),                                          ),                                          labelText: "Birth date",                                          labelStyle: const TextStyle(color: text_new),                                     ),                                      )                                  ),                                /*  TextField(                                    onTap: () async {                                      _setDatePicker(astroGirlBirthDateController);                                    },                                    controller: astroGirlBirthDateController,                                    keyboardType: TextInputType.text,                                    readOnly: true,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: title,                                        fontSize: 14,                                        fontWeight: FontWeight.w600),                                    decoration: InputDecoration(                                      fillColor: white_blue,                                      counterText: "",                                      contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(12.0),                                          borderSide: const BorderSide(                                              width: 0, style: BorderStyle.none)),                                      filled: true,                                      hintText: "Birth date",                                      hintStyle: const TextStyle(                                        color: text_dark,                                        fontSize: 14,                                        fontWeight: FontWeight.w900,                                      ),                                    ),                                  ), */                                  Container(                                      margin: const EdgeInsets.only(top: 14),                                      child: TextField(                                        onTap: () async {                                          _setTimePicker(astroBirthTimeController,setState);                                        },                                        readOnly: true,                                        controller: astroBirthTimeController,                                        keyboardType: TextInputType.text,                                        cursorColor: Colors.grey,                                        decoration: InputDecoration(                                          border: OutlineInputBorder(                                              borderRadius: BorderRadius.circular(20),                                              borderSide: const BorderSide(color: Colors.grey)                                          ),                                          focusedBorder: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey,),                                          ),                                          labelText: "Birth Time",                                          labelStyle: const TextStyle(color: text_new),                                     ),                                      )                                  ),                                 /* TextField(                                    controller: astroBirthTimeController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    readOnly: true,                                    onTap: () async {                                      _setTimePicker(astroBirthTimeController);                                    },                                    style: const TextStyle(                                        color: title,                                        fontSize: 14,                                        fontWeight: FontWeight.w600),                                    decoration: InputDecoration(                                      fillColor: white_blue,                                      counterText: "",                                      contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(10.0),                                          borderSide: const BorderSide(                                              width: 0, style: BorderStyle.none)),                                      filled: true,                                      hintText: "Birth Time",                                      hintStyle: const TextStyle(                                        color: text_dark,                                        fontSize: 14,                                        fontWeight: FontWeight.w900,                                      ),                                    ),                                  ), */                                  Container(                                      margin: const EdgeInsets.only(top: 14),                                      child: TextField(                                        onTap: (){                                          placesDialog(astroBirthPlaceController, setState);                                        },                                        readOnly: true,                                        controller: astroBirthPlaceController,                                        keyboardType: TextInputType.text,                                        cursorColor: Colors.grey,                                        decoration: InputDecoration(                                          border: OutlineInputBorder(                                              borderRadius: BorderRadius.circular(20),                                              borderSide: const BorderSide(color: Colors.grey)                                          ),                                          focusedBorder: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey,),                                          ),                                          labelText: "Birth Place",                                          labelStyle: const TextStyle(color: text_new),                                     ),                                      )                                  ),                                  /* TextField(                                    readOnly: true,                                    controller: astroBirthPlaceController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    onTap: (){                                      placesDialog(astroBirthPlaceController, setState);                                    },                                    style: const TextStyle(                                        color: title,                                        fontSize: 14,                                        fontWeight: FontWeight.w600),                                    decoration: InputDecoration(                                      fillColor: white_blue,                                      counterText: "",                                      contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(10.0),                                          borderSide: const BorderSide(                                              width: 0, style: BorderStyle.none)),                                      filled: true,                                      hintText: "Birth Place",                                      hintStyle: const TextStyle(                                        color: text_dark,                                        fontSize: 14,                                        fontWeight: FontWeight.w900,                                      ),                                    ),                                  ), */                                  Container(                                      margin: const EdgeInsets.only(top: 14),                                      child: TextField(                                        minLines: 4,                                        maxLines: 4,                                        controller: astroNotesController,                                        keyboardType: TextInputType.text,                                        cursorColor: Colors.grey,                                        decoration: InputDecoration(                                          border: OutlineInputBorder(                                              borderRadius: BorderRadius.circular(20),                                              borderSide: const BorderSide(color: Colors.grey)                                          ),                                          focusedBorder: OutlineInputBorder(                                            borderRadius: BorderRadius.circular(20),                                            borderSide: const BorderSide(color: Colors.grey,),                                          ),                                          labelText: "Notes",                                          labelStyle: const TextStyle(color: text_new),                                     ),                                      )                                  ),                                /*  TextField(                                    minLines: 4,                                    maxLines: 4,                                    controller: astroNotesController,                                    keyboardType: TextInputType.text,                                    cursorColor: text_dark,                                    style: const TextStyle(                                        color: title,                                        fontSize: 14,                                        fontWeight: FontWeight.w600),                                    decoration: InputDecoration(                                      fillColor: white_blue,                                      contentPadding: const EdgeInsets.only(left:15,top:5,bottom:5),                                      counterText: "",                                      border: OutlineInputBorder(                                          borderRadius: BorderRadius.circular(10.0),                                          borderSide: const BorderSide(                                              width: 0, style: BorderStyle.none)),                                      filled: true,                                      hintText: "Notes",                                      hintStyle: const TextStyle(                                        color: text_dark,                                        fontSize: 14,                                        fontWeight: FontWeight.w900,                                      ),                                    ),                                  ), */                                  Container(height: 10),                                  const Divider(                                    thickness: 1,                                    color: text_light,                                    endIndent: 1,                                  ),                                 /* InkWell(                                    onTap:(){                                      if(astroFnameController.text.isEmpty)                                      {                                        showToast("Please enter first name", context);                                      }                                      else if(astroLnameController.text.isEmpty)                                      {                                        showToast("Please enter last name", context);                                      }                                      else if(astroEmailController.text.isEmpty)                                      {                                        showToast("Please enter email address", context);                                      }                                      else if(astroMobileNumberController.text.isEmpty)                                      {                                        showToast("Please enter mobile number", context);                                      }                                      else if(astroGirlBirthDateController.text.isEmpty)                                      {                                        showToast("Please enter birth date", context);                                      }                                      else if (astroBirthTimeController.text.isEmpty)                                      {                                        showToast("Please enter birth time ", context);                                      }                                      else if(astroBirthPlaceController.text.isEmpty)                                      {                                        showToast("Please enter birth place", context);                                      }                                      else                                      {                                        _confirmAstrology();                                      }                                    },                                    child: Container(                                      alignment: Alignment.bottomRight,                                      child: Card(                                        shape: RoundedRectangleBorder(                                          borderRadius: BorderRadius.circular(18.0),                                        ),                                        color: light_yellow,                                        elevation: 10,                                        child: const Padding(                                          padding: EdgeInsets.all(14.0),                                          child: Text(                                            "Review Request",                                            style: TextStyle(                                                fontSize: 14,                                                color: title,                                                fontWeight: FontWeight.bold),                                            textAlign: TextAlign.center,                                          ),                                        ),                                      ),                                    ),                                  ), */                                  Container(height: 22,),                                  TextButton(                                    onPressed:(){                                      if(astroFnameController.text.isEmpty)                                      {                                        showToast("Please enter first name", context);                                      }                                      else if(astroLnameController.text.isEmpty)                                      {                                        showToast("Please enter last name", context);                                      }                                      else if(astroEmailController.text.isEmpty)                                      {                                        showToast("Please enter email address", context);                                      }                                      else if(astroMobileNumberController.text.isEmpty)                                      {                                        showToast("Please enter mobile number", context);                                      }                                      else if(astroGirlBirthDateController.text.isEmpty)                                      {                                        showToast("Please enter birth date", context);                                      }                                      else if (astroBirthTimeController.text.isEmpty)                                      {                                        showToast("Please enter birth time ", context);                                      }                                      else if(astroBirthPlaceController.text.isEmpty)                                      {                                        showToast("Please enter birth place", context);                                      }                                      else                                      {                                        _confirmAstrology();                                      }                                    },                                    style: ButtonStyle(                                      shape: MaterialStateProperty.all<RoundedRectangleBorder>(                                        RoundedRectangleBorder(borderRadius: BorderRadius.circular(8.0), side: const BorderSide(color: light_yellow, width: 0.5)),                                      ),                                      backgroundColor: MaterialStateProperty.all<Color>(light_yellow),                                    ),                                    child: Padding(                                      padding: const EdgeInsets.all(4.0),                                      child: Row(                                        mainAxisAlignment: MainAxisAlignment.center,                                        crossAxisAlignment: CrossAxisAlignment.center,                                        children: const [                                          Text('Review Request', style: TextStyle(fontSize: 16, fontWeight: FontWeight.w400, color: title),),                                        ],                                      ),                                    ),                                  ),                                  Container(height: 22,),                                ]                            ),                          )                      ),                    )                  ],                )            );          }),        );      },    ).then((value) {      astroFnameController.text = '';      astroLnameController.text = '';      astroEmailController.text = '';      astroMobileNumberController.text = '';      astroBirthTimeController.text = '';      astroBirthPlaceController.text = '';      astroNotesController.text = '';      astroGirlBirthDateController.text = '';    },);  }  void _confirmAstrology() {    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context) {          return StatefulBuilder(builder: (context, setState) {            return  Container(                decoration: const BoxDecoration(                    color: white,                    borderRadius: BorderRadius.only(                      topLeft: Radius.circular(12.0),                      topRight: Radius.circular(12.0),                    )),                child: Wrap(                  children: [                    Row(                      mainAxisAlignment: MainAxisAlignment.center,                      crossAxisAlignment: CrossAxisAlignment.center,                      children: [                        Container(                          alignment: Alignment.center,                            width: 50,                            margin: const EdgeInsets.only(top: 12),                            child: const Divider(                              height: 1.5,                              thickness: 1.5,                              color: Colors.grey,                            )),                      ],                    ),                    Row(                      mainAxisAlignment: MainAxisAlignment.center,                      crossAxisAlignment: CrossAxisAlignment.center,                      children: [                        Container(                          margin: const EdgeInsets.only(top: 20),                          child: const Text(                            "Confirm Astrology",                            style: TextStyle(                                fontWeight: FontWeight.bold,                                color: title,                                fontSize: 18),                          ),                        ),                      ],                    ),                    SingleChildScrollView(                      child: Container(                        width: MediaQuery.of(context).size.width,                        margin: const EdgeInsets.only(left: 14, right: 14, top: 6, bottom: 10),                        padding: const EdgeInsets.all(10),                        decoration: BoxDecoration(borderRadius: BorderRadius.circular(6), color:sky_blue),                        child: Column(                          crossAxisAlignment: CrossAxisAlignment.start,                          mainAxisAlignment: MainAxisAlignment.start,                          children: [                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "First Name",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      astroFnameController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Last Name",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      astroLnameController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Date of Birth",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      astroGirlBirthDateController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Time of Birth",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      astroBirthTimeController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Email",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      astroEmailController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "Mobile Number",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      "$countryCode ${astroMobileNumberController.value.text}",                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Row(                              children: [                                const Expanded(                                  child: Padding(                                    padding: EdgeInsets.all(12),                                    child: Text(                                      "BirthPlace",                                      style: TextStyle(                                          fontSize: 14,                                          fontWeight: FontWeight.w700,                                          color: text_light),                                    ),                                  ),                                ),                                Expanded(                                  child: Text(                                      astroBirthPlaceController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            ),                            Visibility(                              visible: astroNotesController.value.text.isNotEmpty,                                child: Column(                              children: [                                const Padding(                                  padding: EdgeInsets.all(8),                                  child: Text(                                    "Notes",                                    style: TextStyle(                                        fontSize: 14,                                        fontWeight: FontWeight.w700,                                        color: text_light),                                  ),                                ),                                Padding(                                  padding: const EdgeInsets.all(8.0),                                  child: Text(                                      astroNotesController.value.text,                                      style: const TextStyle(                                          fontWeight: FontWeight.w700,                                          color: title,                                          fontSize: 14)),                                )                              ],                            )),                          ],                        ),                      ),                    ),                    Row(                      mainAxisAlignment: MainAxisAlignment.end,                      crossAxisAlignment: CrossAxisAlignment.end,                      children: [                      Flexible(                        child: Container(                          alignment: Alignment.bottomRight,                          margin: const EdgeInsets.only(top: 20,bottom: 20),                          child: GestureDetector(                            onTap: (){                              Navigator.pop(context);                            },                            child: Card(                              shape: RoundedRectangleBorder(                                borderRadius: BorderRadius.circular(20.0),                              ),                              color: light_yellow,                              elevation: 10,                              child: const Padding(                                padding: EdgeInsets.all(14.0),                                child: Text(                                  "Edit Request",                                  style: TextStyle(                                      fontSize: 14,                                      color: title,                                      fontWeight: FontWeight.bold),                                  textAlign: TextAlign.center,                                ),                              ),                            ),                          ),                        ),                      ),                      InkWell(                        onTap:(){                          callAstrologySaveApi("");                          Navigator.pop(context);                          /*Navigator.of(context).push(                            MaterialPageRoute(                              builder: (BuildContext context) => UsePaypal(                                  sandboxMode: true,                                  clientId: PAYPAL_CLIENT_ID,                                  secretKey:PAYPAL_CLIENT_SECRET,                                  returnURL: "https://panditbookings.com/return",                                  cancelURL: "http://panditbookings.com/cancel",                                  transactions: [                                    {                                      "amount": {                                        "total": astroPrice,                                        "currency": "USD",                                        "details": const {                                          "subtotal": '1',                                          "shipping": '0',                                          "shipping_discount": 0                                        }                                      },                                      "description": "The payment transaction description.",                                      // "payment_options": {                                      //   "allowed_payment_method":                                      //       "INSTANT_FUNDING_SOURCE"                                      // },                                      "item_list": {                                        "items": const [                                          {                                            "name": "Astrology Request",                                            "quantity": 1,                                            "price": '1',                                            "currency": "USD"                                          }                                        ],                                        // shipping address is not required though                                        "shipping_address": {                                          "recipient_name": "${sessionManager.getName()} ${sessionManager.getLastName()}",                                          "line1": "2 Gila Crescent",                                          "line2": "",                                          "city": "Johannesburg",                                          "country_code": "SA",                                          "postal_code": "2090",                                          "phone": "+00000000",                                          "state": 'Gauteng'                                        },                                      }                                    }                                  ],                                  note: "Contact us for any questions on your order.",                                  onSuccess: (Map params) async {                                    print("onSuccess: $params");                                    String paymentId = "";                                    paymentId = params['paymentId'];                                    callAstrologySaveApi(paymentId);                                  },                                  onError: (error) {                                    print("onError: $error");                                  },                                  onCancel: (params) {                                    print('cancelled: $params');                                  }                              ),                            ),                          );*/                        },                        child: Container(                          alignment: Alignment.bottomRight,                          margin: const EdgeInsets.only(top: 20,bottom: 20),                          child: Card(                            shape: RoundedRectangleBorder(                              borderRadius: BorderRadius.circular(20.0),                            ),                            color: light_yellow,                            elevation: 10,                            child: const Padding(                              padding: EdgeInsets.all(14.0),                              child: Text(                                "Submit Request",                                style: TextStyle(                                    fontSize: 14,                                    color: title,                                    fontWeight: FontWeight.bold),                                textAlign: TextAlign.center,                              ),                            ),                          ),                        ),                      ),                    ],                    )                  ],                ));          });        });  }  callAstrologySaveApi(String paymentId) async {    setState(() {      _isLoading = true;    });    Navigator.pop(context);    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(MAIN_URL + astrologySave);    Map<String, String> jsonBody = {      "first_name": astroFnameController.value.text,      "last_name": astroLnameController.value.text,      "birth_date": astroGirlBirthDateController.value.text,      "birth_time": astroBirthTimeController.value.text,      "address": astroBirthPlaceController.value.text,      "comments": astroNotesController.value.text,      "user_id": sessionManager.getUserId().toString(),      "astrology_id": "",      "email": astroEmailController.value.text,      "mobile": astroMobileNumberController.value.text,      "notes": astroNotesController.value.text,      'payment_id' :paymentId    };    final response = await http.post(url, body: jsonBody);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var astroResponse = CommonResponseModel.fromJson(user);    if (statusCode == 200 && astroResponse.success == 1) {      _showAlertDialog("assets/images/ic_astro_only.png","Your request\nfor astrology is received,\nwill contact you shortly.");      setState(() {        _isLoading = false;      });    }    else    {      setState(() {        _isLoading = false;      });      showToast(astroResponse.message, context);    }  }  String countryCode = "+27";  List<CountryListResponseModel> listCountryCode = [];  List<CountryListResponseModel> listSearchCountryName = [];  TextEditingController countryCodeSeachController = TextEditingController();  countryDialog(StateSetter updateState) {    showModalBottomSheet(        context: context,        isScrollControlled: true,        backgroundColor: Colors.transparent,        builder: (context){          return StatefulBuilder(              builder:(context, setState)              {                return Container(                  height: MediaQuery.of(context).size.height * 0.88,                  decoration: const BoxDecoration(                      color: white,                      borderRadius: BorderRadius.only(                        topLeft: Radius.circular(12.0),                        topRight: Radius.circular(12.0),                      )),                  child: Column(                    children:  [                      Container(                          width: 50,                          margin: const EdgeInsets.only(top: 12),                          child: const Divider(                            height: 1.5,                            thickness: 1.5,                            color: Colors.grey,                          )                      ),                      Container(                        margin: const EdgeInsets.only(top: 20),                        child: const Text(                          "Select Country Code",                          style: TextStyle(                              fontWeight: FontWeight.bold,                              color: title,                              fontSize: 18),                        ),                      ),                      Container(                        margin: const EdgeInsets.only(top: 20,bottom: 10,left: 14,right: 14),                        child: TextField(                          controller: countryCodeSeachController,                          keyboardType: TextInputType.text,                          cursorColor: text_dark,                          style: const TextStyle(                              color: title,                              fontSize: 14,                              fontWeight: FontWeight.w600),                          onChanged: (editable){                            if (listCountryCode != null && listCountryCode.length > 0)                            {                              listSearchCountryName = [];                              if (editable.length > 0)                              {                                for (var i=0; i < listCountryCode.length; i++)                                {                                  if (listCountryCode[i].name.toLowerCase().contains(editable.toString().toLowerCase()))                                  {                                    listSearchCountryName.add(listCountryCode[i]);                                  }                                }                              }                              else                              {                                listSearchCountryName = [];                              }                              setState((){});                              /*adapterCountry = AdapterCountry(activity, listSearchCountryName, dialog)                              rvCountry.adapter = adapterCountry*/                            }                          },                          decoration: InputDecoration(                            fillColor: white_blue,                            counterText: "",                            border: OutlineInputBorder(                                borderRadius: BorderRadius.circular(14.0),                                borderSide: const BorderSide(                                    width: 0, style: BorderStyle.none)),                            filled: true,                            hintText: "Search",                            hintStyle: const TextStyle(                              color: text_dark,                              fontSize: 14,                              fontWeight: FontWeight.w900,                            ),                          ),                        ),                      ),                      Expanded(                        child: ListView.builder(                            shrinkWrap: true,                            physics: const ScrollPhysics(),                            scrollDirection: Axis.vertical,                            itemCount: listSearchCountryName.isNotEmpty ? listSearchCountryName.length : listCountryCode.length,                            itemBuilder: (BuildContext context, int i) {                              return InkWell(                                onTap: (){                                  setState((){                                    countryCode = listSearchCountryName.isNotEmpty ? listSearchCountryName[i].dialCode : listCountryCode[i].dialCode;                                  });                                  Navigator.pop(context);                                },                                child: Container(                                  margin: const EdgeInsets.only(left: 14, right: 14),                                  child: Column(                                    children: [                                      Padding(                                        padding: const EdgeInsets.all(16),                                        child: Row(                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,                                          children: [                                            Flexible(child: Text( listSearchCountryName.isNotEmpty ? listSearchCountryName[i].name : listCountryCode[i].name.toString(),style: const TextStyle(fontSize: 14,fontWeight: FontWeight.w200,color: title), textAlign: TextAlign.start,)),                                            Text(listSearchCountryName.isNotEmpty ? listSearchCountryName[i].dialCode : listCountryCode[i].dialCode.toString(),style: const TextStyle(fontWeight: FontWeight.w300,color: text_new,fontSize: 16),)                                          ],                                        ),                                      ),                                      const Divider(height: 1,color: text_light,indent: 1,)                                    ],                                  ),                                ),                              );                            }                        ),                      )                    ],                  ),                );              }          );        });  }  List data = [];  Future<void> getCountryData() async {    var jsonText = await rootBundle.loadString('assets/countries.json');    setState(() => data = json.decode(jsonText));    var name = "";    var code = "";    var dialCode = "";    for (var i=0; i < data.length; i++)    {      name = data[i]['name'];      code = data[i]['code'];      dialCode = data[i]['dial_code'] != null ? data[i]['dial_code'] : "";      listCountryCode.add(CountryListResponseModel(name: name, dialCode: dialCode, code: code));    }  }  _showAlertDialog(String image, String text) {    Widget okButton = Image.asset(image,height: 160,width:160);    AlertDialog alert = AlertDialog(      content: Wrap(        children: [          Container(            width: MediaQuery.of(context).size.width,            margin: const EdgeInsets.only(left: 12,right: 12),            child: Column(              children: [                okButton,                Container(height: 12,),                Text(text,style: const TextStyle(fontSize: 18,color: text_new,fontWeight: FontWeight.w900),textAlign: TextAlign.center),              ],            ),          ),        ],      ),    );    showDialog(      context: context,      barrierDismissible: false,      builder: (BuildContext context) {        return alert;      },    );    Timer(const Duration(seconds: 3), () {      Navigator.pop(context);    },);  }  _setDatePicker(TextEditingController controller){    showCupertinoModalPopup(        context: context,        builder: (BuildContext builder) {          return Container(            height: MediaQuery.of(context).copyWith().size.height*0.25,            color: Colors.white,            child: CupertinoDatePicker(              mode: CupertinoDatePickerMode.date,              onDateTimeChanged: (value) {                if (value != selectedDate) {                  setState(()                  {                    String formattedDate = DateFormat('MMMM dd, yyyy').format(value);                    controller.text = formattedDate;                  });                }              },              initialDateTime: DateTime.now(),              minimumYear: 1900,              maximumYear: int.parse(getCurrentYear()),            ),          );        }    );  }  _setPickDate(TextEditingController controller, StateSetter setState){    showCupertinoModalPopup(        context: context,        builder: (BuildContext builder) {          return Container(            height: MediaQuery.of(context).copyWith().size.height*0.25,            color: Colors.white,            child: CupertinoDatePicker(              mode: CupertinoDatePickerMode.date,              onDateTimeChanged: (value) {                if (value != null && value != selectedDate) {                  setState(()                  {                    String formattedDate = DateFormat('MMM dd, yyyy').format(value);                    // controller.text = formattedDate;                    selectedDate = formattedDate;                  });                }              },              initialDateTime: DateTime.now(),              minimumYear: 2023,              maximumYear: 2035,            ),          );        }    );  }  _setTimePicker(TextEditingController controller, StateSetter setState){    showCupertinoModalPopup(        context: context,        builder: (BuildContext builder) {          return Container(            height: MediaQuery.of(context).copyWith().size.height*0.25,            color: Colors.white,            child: CupertinoDatePicker(              mode: CupertinoDatePickerMode.time,              onDateTimeChanged: (value) {                if (value != null && value != selectedTime) {                  setState(() {                    selectedTime = ("${value.hour}:${value.minute}${value.timeZoneName}").toString();                    selectedTime = DateFormat("h:mm a").format(value);                    print(selectedTime);                    controller.text =  DateFormat("h:mm a").format(value);                  });                }              },              initialDateTime: DateTime.now(),              use24hFormat: false,            ),          );        }    );  }   getTempleList() async {    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    var location = "$lat,$long";    print("Test$location");    Map<String, dynamic> jsonBody = {      'location': location,      'rankby': "distance",      'keyword': "hindu temple",      'key': API_KEY,    };    var uri = Uri.https('maps.googleapis.com', '/maps/api/place/nearbysearch/json', jsonBody);    var response = await http.get(uri, headers: {      HttpHeaders.contentTypeHeader: 'application/json',    });    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = TempleListResponseModel.fromJson(user);    if (statusCode == 200)    {      _listTemples = [];      _listTemples = dataResponse.results ?? [];      setState(() {        _isLoading = false;      });    }    else    {      setState(() {        _isLoading = false;      });    }  }  getPrices() async {    HttpWithMiddleware http = HttpWithMiddleware.build(middlewares: [      HttpLogger(logLevel: LogLevel.BODY),    ]);    final url = Uri.parse(WEBSITE_URL + priceJson);    final response = await http.get(url);    final statusCode = response.statusCode;    final body = response.body;    Map<String, dynamic> user = jsonDecode(body);    var dataResponse = PricesResponseModel.fromJson(user);    if (statusCode == 200)      {        matchMakingPrice = dataResponse.matchmakingPrice.toString();        astroPrice = dataResponse.astrologyPrice.toString();        rashiPrice = dataResponse.rashiPrice.toString();      }  }}